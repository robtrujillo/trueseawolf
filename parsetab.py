
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '852F2C561F216530786A37391FC72D60'
    
_lr_action_items = {'SEMI':([5,6,7,9,12,14,16,21,22,23,46,51,53,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,84,91,98,99,113,117,],[-42,-10,-40,24,-41,-14,-43,-51,-49,-15,82,-22,-38,-34,-27,-23,-36,-30,-32,-25,-29,-28,-31,-37,-35,-26,-33,-24,-50,-39,103,-44,-9,-48,-8,-59,]),'CLOSE_PARENTHESIS':([5,6,7,12,14,16,20,21,22,23,43,53,56,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,91,97,98,99,105,106,107,111,112,113,],[-42,-10,-40,-41,-14,-43,57,-51,-49,-15,78,-38,93,-13,98,-34,-27,-23,-36,-30,-32,-25,-29,-28,-31,-37,-35,-26,-33,-24,-50,-39,-44,113,-9,-48,116,117,118,-12,-11,-8,]),'CLOSE_BRACKET':([5,6,7,12,14,16,21,22,23,53,54,55,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,98,99,108,109,113,],[-42,-10,-40,-41,-14,-43,-51,-49,-15,-38,-47,91,-34,-27,-23,-36,-30,-32,-25,-29,-28,-31,-37,-35,-26,99,-33,-24,-50,-39,-44,-9,-48,-45,-46,-8,]),'ELSE':([79,80,88,],[101,-54,-16,]),'NAME':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,79,80,81,82,85,86,87,88,89,90,92,94,95,96,100,103,110,114,],[3,3,21,3,21,21,21,21,21,3,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-56,-54,-57,21,21,21,21,-16,21,21,21,21,-7,21,-52,21,-6,-55,]),'DIVIDE':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,28,-41,-14,-43,-51,-49,28,28,28,28,28,-9,28,28,28,-23,28,28,28,28,28,28,28,28,28,28,28,28,-24,28,-39,-44,-8,-9,-48,28,28,28,28,28,28,28,-8,]),'COMMA':([5,6,7,12,14,16,21,22,23,53,54,55,56,58,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,91,97,98,99,108,109,111,112,113,],[-42,-10,-40,-41,-14,-43,-51,-49,-15,-38,90,92,94,96,-34,-27,-23,-36,-30,-32,-25,-29,-28,-31,-37,-35,-26,-33,-24,-50,-39,-44,94,-9,-48,-45,-46,-12,-11,-8,]),'PLUS':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,32,-41,-14,-43,-51,-49,32,32,32,32,32,-9,32,-34,32,-23,32,32,32,-25,32,32,32,32,-35,-26,32,-33,-24,32,-39,-44,-8,-9,-48,32,32,32,32,32,32,32,-8,]),'NOT':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,79,80,81,82,85,86,87,88,89,90,92,94,95,96,100,103,110,114,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-56,-54,-57,17,17,17,17,-16,17,17,17,17,-7,17,-52,17,-6,-55,]),'OR':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,36,-41,-14,-43,-51,-49,36,36,36,-38,36,-9,36,-34,-27,-23,-36,-30,-32,-25,-29,-28,-31,-37,-35,-26,36,-33,-24,36,-39,-44,-8,-9,-48,36,36,36,36,36,36,36,-8,]),'OPEN_CURLY':([0,2,10,24,44,45,57,88,93,95,101,110,116,118,],[15,15,15,15,15,15,15,-16,15,-7,15,-6,-58,-53,]),'PRINT':([15,47,79,80,81,82,85,88,100,103,114,],[49,49,-56,-54,-57,49,49,-16,-52,49,-55,]),'STRING':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,79,80,81,82,85,86,87,88,89,90,92,94,95,96,100,103,110,114,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-56,-54,-57,5,5,5,5,-16,5,5,5,5,-7,5,-52,5,-6,-55,]),'EXPONENT':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,37,-41,-14,-43,-51,-49,37,37,37,37,37,-9,37,37,37,-23,37,37,37,37,37,37,37,37,-35,37,37,-33,-24,37,-39,-44,-8,-9,-48,37,37,37,37,37,37,37,-8,]),'FLOOR_DIV':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,26,-41,-14,-43,-51,-49,26,26,26,26,26,-9,26,-34,26,-23,26,26,26,26,26,26,26,26,-35,26,26,-33,-24,26,-39,-44,-8,-9,-48,26,26,26,26,26,26,26,-8,]),'EQUALS':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,42,-41,-14,-43,-51,-49,42,42,42,-38,42,-9,42,-34,-27,-23,-36,-30,-32,-25,-29,-28,-31,-37,-35,-26,42,-33,-24,-50,-39,-44,-8,-9,-48,42,42,42,42,42,42,42,-8,]),'EQUALS_EQUALS':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,35,-41,-14,-43,-51,-49,35,35,35,35,35,-9,35,-34,-27,-23,35,-30,-32,-25,-29,-28,-31,35,-35,-26,35,-33,-24,35,-39,-44,-8,-9,-48,35,35,35,35,35,35,35,-8,]),'MINUS':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,38,-41,-14,-43,-51,-49,38,38,38,38,38,-9,38,-34,38,-23,38,38,38,-25,38,38,38,38,-35,-26,38,-33,-24,38,-39,-44,-8,-9,-48,38,38,38,38,38,38,38,-8,]),'OPEN_PARENTHESIS':([0,2,3,8,10,13,15,17,18,20,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,49,52,59,79,80,81,82,85,86,87,88,89,90,92,94,95,96,100,103,110,114,],[13,13,20,13,13,13,13,13,13,13,59,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,86,87,89,13,-56,-54,-57,13,13,13,13,-16,13,13,13,13,-7,13,-52,13,-6,-55,]),'MOD':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,40,-41,-14,-43,-51,-49,40,40,40,40,40,-9,40,40,40,-23,40,40,40,40,40,40,40,40,40,40,40,-33,-24,40,-39,-44,-8,-9,-48,40,40,40,40,40,40,40,-8,]),'LESS_THAN':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,27,-41,-14,-43,-51,-49,27,27,27,27,27,-9,27,-34,-27,-23,27,-30,-32,-25,-29,-28,-31,27,-35,-26,27,-33,-24,27,-39,-44,-8,-9,-48,27,27,27,27,27,27,27,-8,]),'CLOSE_CURLY':([47,50,79,80,81,82,83,85,88,100,102,103,104,114,115,],[-21,88,-56,-54,-57,-21,-19,-21,-16,-52,-17,-21,-20,-55,-18,]),'INT':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,79,80,81,82,85,86,87,88,89,90,92,94,95,96,100,103,110,114,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-56,-54,-57,7,7,7,7,-16,7,7,7,7,-7,7,-52,7,-6,-55,]),'$end':([0,1,2,4,10,19,24,25,60,88,95,110,],[-4,0,-4,-1,-4,-5,-4,-3,-2,-16,-7,-6,]),'GREATER_THAN_EQUAL':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,30,-41,-14,-43,-51,-49,30,30,30,30,30,-9,30,-34,-27,-23,30,-30,-32,-25,-29,-28,-31,30,-35,-26,30,-33,-24,30,-39,-44,-8,-9,-48,30,30,30,30,30,30,30,-8,]),'RETURN':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,79,80,81,82,85,86,87,88,89,90,92,94,95,96,100,103,110,114,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-56,-54,-57,8,8,8,8,-16,8,8,8,8,-7,8,-52,8,-6,-55,]),'GREATER_THAN':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,33,-41,-14,-43,-51,-49,33,33,33,33,33,-9,33,-34,-27,-23,33,-30,-32,-25,-29,-28,-31,33,-35,-26,33,-33,-24,33,-39,-44,-8,-9,-48,33,33,33,33,33,33,33,-8,]),'LESS_THAN_EQUAL':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,34,-41,-14,-43,-51,-49,34,34,34,34,34,-9,34,-34,-27,-23,34,-30,-32,-25,-29,-28,-31,34,-35,-26,34,-33,-24,34,-39,-44,-8,-9,-48,34,34,34,34,34,34,34,-8,]),'NOT_EQUAL':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,31,-41,-14,-43,-51,-49,31,31,31,31,31,-9,31,-34,-27,-23,31,-30,-32,-25,-29,-28,-31,31,-35,-26,31,-33,-24,31,-39,-44,-8,-9,-48,31,31,31,31,31,31,31,-8,]),'IF':([15,47,79,80,81,82,85,88,100,103,114,],[52,52,-56,-54,-57,52,52,-16,-52,52,-55,]),'WHILE':([15,47,79,80,81,82,85,88,100,103,114,],[48,48,-56,-54,-57,48,48,-16,-52,48,-55,]),'REAL':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,79,80,81,82,85,86,87,88,89,90,92,94,95,96,100,103,110,114,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-56,-54,-57,12,12,12,12,-16,12,12,12,12,-7,12,-52,12,-6,-55,]),'MULT':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,41,-41,-14,-43,-51,-49,41,41,41,41,41,-9,41,41,41,-23,41,41,41,41,41,41,41,41,41,41,41,41,-24,41,-39,-44,-8,-9,-48,41,41,41,41,41,41,41,-8,]),'AND':([3,5,6,7,9,11,12,14,16,21,22,23,43,51,53,54,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,98,99,105,106,107,108,109,111,112,113,],[-51,-42,-10,-40,-49,29,-41,-14,-43,-51,-49,29,29,29,-38,29,-9,29,-34,-27,-23,-36,-30,-32,-25,-29,-28,-31,29,-35,-26,29,-33,-24,29,-39,-44,-8,-9,-48,29,29,29,29,29,29,29,-8,]),'OPEN_BRACKET':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,51,53,54,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,103,105,106,107,108,109,110,111,112,113,114,],[18,18,-51,-42,-10,-40,18,-49,18,39,-41,18,-14,18,-43,18,18,18,-51,-49,39,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,39,18,39,39,39,-9,39,18,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-39,-56,-54,-57,18,18,18,18,-16,18,18,-44,18,-8,18,-7,18,-9,-48,-52,18,39,39,39,39,39,-6,39,39,-8,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'while_condition':([15,47,82,85,103,],[45,45,45,45,45,]),'function_def':([0,2,10,24,],[2,2,2,2,]),'statement_list':([15,],[50,]),'pgrm_tail':([0,2,10,24,],[4,19,25,60,]),'return_stmt':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,82,85,86,87,89,90,92,94,96,103,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'list':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,82,85,86,87,89,90,92,94,96,103,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'condition':([15,47,82,85,103,],[44,44,44,44,44,]),'function_call':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,82,85,86,87,89,90,92,94,96,103,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'statement_tail':([47,82,85,103,],[83,102,104,115,]),'expression':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,82,85,86,87,89,90,92,94,96,103,],[11,11,23,11,43,51,53,54,58,11,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,51,58,51,51,105,106,107,108,109,111,112,51,]),'inner':([18,],[55,]),'special':([15,47,82,85,103,],[47,85,85,85,85,]),'thenBlock':([44,],[79,]),'parameters':([20,59,],[56,97,]),'block':([0,2,10,24,44,45,57,93,101,],[10,10,10,10,80,81,95,110,114,]),'elseBlock':([79,],[100,]),'var_assign':([0,2,8,10,13,15,17,18,20,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,59,82,85,86,87,89,90,92,94,96,103,],[9,9,22,9,22,22,22,22,22,9,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'statement':([15,47,82,85,103,],[46,84,84,84,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pgrm_tail','program',1,'p_program','main.py',470),
  ('pgrm_tail -> var_assign SEMI pgrm_tail','pgrm_tail',3,'p_pgrm_tail1','main.py',476),
  ('pgrm_tail -> block pgrm_tail','pgrm_tail',2,'p_pgrm_tail1','main.py',477),
  ('pgrm_tail -> <empty>','pgrm_tail',0,'p_pgrm_tail1','main.py',478),
  ('pgrm_tail -> function_def pgrm_tail','pgrm_tail',2,'p_pgrm_tail2','main.py',492),
  ('function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block','function_def',5,'p_function_def','main.py',499),
  ('function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block','function_def',4,'p_function_def1','main.py',505),
  ('function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS','function_call',4,'p_function_call','main.py',511),
  ('function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS','function_call',3,'p_function_call1','main.py',517),
  ('expression -> function_call','expression',1,'p_expression_function','main.py',525),
  ('parameters -> expression COMMA expression','parameters',3,'p_parameter1','main.py',532),
  ('parameters -> parameters COMMA expression','parameters',3,'p_parameter2','main.py',538),
  ('parameters -> expression','parameters',1,'p_parameter3','main.py',544),
  ('expression -> return_stmt','expression',1,'p_expression_return','main.py',552),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return','main.py',558),
  ('block -> OPEN_CURLY statement_list CLOSE_CURLY','block',3,'p_statement_block','main.py',564),
  ('statement_list -> statement SEMI statement_tail','statement_list',3,'p_statement_list','main.py',571),
  ('statement_tail -> statement SEMI statement_tail','statement_tail',3,'p_statement_tail','main.py',578),
  ('statement_list -> special statement_tail','statement_list',2,'p_special_list','main.py',585),
  ('statement_tail -> special statement_tail','statement_tail',2,'p_special_tail','main.py',591),
  ('statement_tail -> <empty>','statement_tail',0,'p_statement_list_empty','main.py',597),
  ('statement -> expression','statement',1,'p_statement','main.py',604),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','main.py',611),
  ('expression -> expression MULT expression','expression',3,'p_expression','main.py',612),
  ('expression -> expression PLUS expression','expression',3,'p_expression','main.py',613),
  ('expression -> expression MINUS expression','expression',3,'p_expression','main.py',614),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression','main.py',615),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression','main.py',616),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression','main.py',617),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression','main.py',618),
  ('expression -> expression EQUALS_EQUALS expression','expression',3,'p_expression','main.py',619),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','main.py',620),
  ('expression -> expression MOD expression','expression',3,'p_expression','main.py',621),
  ('expression -> expression FLOOR_DIV expression','expression',3,'p_expression','main.py',622),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression','main.py',623),
  ('expression -> expression AND expression','expression',3,'p_expression','main.py',624),
  ('expression -> expression OR expression','expression',3,'p_expression','main.py',625),
  ('expression -> NOT expression','expression',2,'p_expression_not','main.py',632),
  ('expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS','expression',3,'p_expression_parenthesis','main.py',638),
  ('expression -> INT','expression',1,'p_expression_int','main.py',644),
  ('expression -> REAL','expression',1,'p_expression_real','main.py',652),
  ('expression -> STRING','expression',1,'p_expression_string','main.py',660),
  ('expression -> list','expression',1,'p_expression_list','main.py',668),
  ('list -> OPEN_BRACKET inner CLOSE_BRACKET','list',3,'p_expression_list_def','main.py',675),
  ('inner -> expression COMMA expression','inner',3,'p_expression_inner','main.py',681),
  ('inner -> inner COMMA expression','inner',3,'p_expression_inner2','main.py',687),
  ('inner -> expression','inner',1,'p_inner','main.py',693),
  ('expression -> expression OPEN_BRACKET expression CLOSE_BRACKET','expression',4,'p_expression_index','main.py',699),
  ('expression -> var_assign','expression',1,'p_var','main.py',706),
  ('var_assign -> expression EQUALS expression','var_assign',3,'p_var_assign','main.py',713),
  ('expression -> NAME','expression',1,'p_expression_var','main.py',720),
  ('special -> condition thenBlock elseBlock','special',3,'p_expression_if','main.py',726),
  ('condition -> IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS','condition',4,'p_condition','main.py',733),
  ('thenBlock -> block','thenBlock',1,'p_thenBlock','main.py',739),
  ('elseBlock -> ELSE block','elseBlock',2,'p_elseBlock1','main.py',745),
  ('elseBlock -> <empty>','elseBlock',0,'p_elseBlock2','main.py',751),
  ('special -> while_condition block','special',2,'p_while','main.py',757),
  ('while_condition -> WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS','while_condition',4,'p_while_condition','main.py',763),
  ('statement -> PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS','statement',4,'p_print','main.py',769),
]
