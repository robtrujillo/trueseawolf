
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A55D52EA39CAC708D6AA5DBD83B94753'
    
_lr_action_items = {'EQUALS':([2,],[11,]),'OR':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,16,-24,-25,-21,-22,-20,16,16,-12,-19,16,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,-18,-6,-16,-23,-26,]),'OPEN_BRACKET':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,17,-24,-25,17,-22,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-23,-26,]),'EQUALS_EQUALS':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,18,-24,-25,-21,-22,18,18,18,-12,18,18,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,18,-6,-16,-23,-26,]),'NAME':([0,3,4,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,],[2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'CLOSE_PARENTHESIS':([9,10,12,13,14,31,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-24,-25,-21,-22,-20,49,-12,-19,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,-18,-6,-16,-23,-26,]),'NOT_EQUAL':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,22,-24,-25,-21,-22,22,22,22,-12,22,22,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,22,-6,-16,-23,-26,]),'-':([0,3,4,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'PLUS':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,23,-24,-25,-21,-22,23,23,23,23,23,23,23,23,-8,23,23,-7,23,-17,-5,-15,23,-6,-16,-23,-26,]),'GREATER_THAN_EQUAL':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,15,-24,-25,-21,-22,15,15,15,-12,15,15,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,15,-6,-16,-23,-26,]),'EXPONENT':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,25,-24,-25,-21,-22,25,25,25,25,25,25,25,25,25,25,25,25,25,-17,-5,-15,25,-6,25,-23,-26,]),'NOT':([0,3,4,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'OPEN_PARENTHESIS':([0,3,4,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FLOOR_DIV':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,30,-24,-25,-21,-22,30,30,30,30,30,30,30,30,30,30,30,30,30,-17,-5,-15,30,-6,-16,-23,-26,]),'$end':([0,1,2,5,6,7,9,10,12,13,14,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-34,0,-22,-3,-1,-2,-24,-25,-21,-22,-20,-4,-12,-19,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,-18,-6,-16,-23,-26,]),'LESS_THAN_EQUAL':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,19,-24,-25,-21,-22,19,19,19,-12,19,19,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,19,-6,-16,-23,-26,]),'MINUS':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,20,-24,-25,-21,-22,20,20,20,20,20,20,20,20,-8,20,20,-7,20,-17,-5,-15,20,-6,-16,-23,-26,]),'LESS_THAN':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,21,-24,-25,-21,-22,21,21,21,-12,21,21,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,21,-6,-16,-23,-26,]),'MOD':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,27,-24,-25,-21,-22,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-5,-15,27,-6,27,-23,-26,]),'GREATER_THAN':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,24,-24,-25,-21,-22,24,24,24,-12,24,24,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,24,-6,-16,-23,-26,]),'REAL':([0,3,4,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'STRING':([0,3,4,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'DIVIDE':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,26,-24,-25,-21,-22,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-5,26,26,-6,26,-23,-26,]),'AND':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,28,-24,-25,-21,-22,-20,28,28,-12,28,28,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,-18,-6,-16,-23,-26,]),'MULT':([2,6,9,10,12,13,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-22,29,-24,-25,-21,-22,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-5,29,29,-6,29,-23,-26,]),'CLOSE_BRACKET':([9,10,12,13,14,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[-24,-25,-21,-22,-20,-12,-19,50,-13,-10,-8,-9,-14,-7,-11,-17,-5,-15,-18,-6,-16,-23,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,4,8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,],[6,12,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,]),'var_assign':([0,],[7,]),'calc':([0,],[1,]),'empty':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expression','calc',1,'p_calc','trueSeawolf.py',216),
  ('calc -> var_assign','calc',1,'p_calc','trueSeawolf.py',217),
  ('calc -> empty','calc',1,'p_calc','trueSeawolf.py',218),
  ('var_assign -> NAME EQUALS expression','var_assign',3,'p_var_assign','trueSeawolf.py',226),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','trueSeawolf.py',232),
  ('expression -> expression MULT expression','expression',3,'p_expression','trueSeawolf.py',233),
  ('expression -> expression PLUS expression','expression',3,'p_expression','trueSeawolf.py',234),
  ('expression -> expression MINUS expression','expression',3,'p_expression','trueSeawolf.py',235),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression','trueSeawolf.py',236),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression','trueSeawolf.py',237),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression','trueSeawolf.py',238),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression','trueSeawolf.py',239),
  ('expression -> expression EQUALS_EQUALS expression','expression',3,'p_expression','trueSeawolf.py',240),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression','trueSeawolf.py',241),
  ('expression -> expression MOD expression','expression',3,'p_expression','trueSeawolf.py',242),
  ('expression -> expression FLOOR_DIV expression','expression',3,'p_expression','trueSeawolf.py',243),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression','trueSeawolf.py',244),
  ('expression -> expression AND expression','expression',3,'p_expression','trueSeawolf.py',245),
  ('expression -> expression OR expression','expression',3,'p_expression','trueSeawolf.py',246),
  ('expression -> NOT expression','expression',2,'p_expression_not','trueSeawolf.py',252),
  ('expression -> - expression','expression',2,'p_expression_uminus','trueSeawolf.py',257),
  ('expression -> NAME','expression',1,'p_expression_var','trueSeawolf.py',262),
  ('expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS','expression',3,'p_expression_parenthesis','trueSeawolf.py',268),
  ('expression -> REAL','expression',1,'p_expression_real','trueSeawolf.py',282),
  ('expression -> STRING','expression',1,'p_expression_int','trueSeawolf.py',290),
  ('expression -> expression OPEN_BRACKET expression CLOSE_BRACKET','expression',4,'p_expression_index','trueSeawolf.py',298),
  ('list -> OPEN_BRACKET inner CLOSE_BRACKET','list',3,'p_expression_list','trueSeawolf.py',310),
  ('inner -> expression COMMA expression','inner',3,'p_expression_inner','trueSeawolf.py',316),
  ('inner -> inner COMMA expression','inner',3,'p_expression_inner2','trueSeawolf.py',322),
  ('inner -> expression','inner',1,'p_inner','trueSeawolf.py',328),
  ('block -> OPEN_CURLY statement_list CLOSE_CURLY','block',3,'p_statement_block','trueSeawolf.py',335),
  ('statement_list -> <empty>','statement_list',0,'p_statement_list','trueSeawolf.py',343),
  ('statement -> expression','statement',1,'p_statement','trueSeawolf.py',347),
  ('empty -> <empty>','empty',0,'p_empty','trueSeawolf.py',358),
]
