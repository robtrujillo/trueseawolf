Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    IN

Grammar

Rule 0     S' -> block
Rule 1     block -> OPEN_CURLY statement_list CLOSE_CURLY
Rule 2     statement_list -> statement SEMI statement_tail
Rule 3     statement_tail -> statement SEMI statement_tail
Rule 4     statement_list -> special statement_tail
Rule 5     statement_tail -> special statement_tail
Rule 6     statement_tail -> <empty>
Rule 7     statement -> expression
Rule 8     expression -> expression DIVIDE expression
Rule 9     expression -> expression MULT expression
Rule 10    expression -> expression PLUS expression
Rule 11    expression -> expression MINUS expression
Rule 12    expression -> expression LESS_THAN expression
Rule 13    expression -> expression LESS_THAN_EQUAL expression
Rule 14    expression -> expression GREATER_THAN expression
Rule 15    expression -> expression GREATER_THAN_EQUAL expression
Rule 16    expression -> expression EQUALS_EQUALS expression
Rule 17    expression -> expression NOT_EQUAL expression
Rule 18    expression -> expression MOD expression
Rule 19    expression -> expression FLOOR_DIV expression
Rule 20    expression -> expression EXPONENT expression
Rule 21    expression -> expression AND expression
Rule 22    expression -> expression OR expression
Rule 23    expression -> NOT expression
Rule 24    expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
Rule 25    expression -> INT
Rule 26    expression -> REAL
Rule 27    expression -> STRING
Rule 28    expression -> list
Rule 29    list -> OPEN_BRACKET inner CLOSE_BRACKET
Rule 30    inner -> expression COMMA expression
Rule 31    inner -> inner COMMA expression
Rule 32    inner -> expression
Rule 33    expression -> expression OPEN_BRACKET expression CLOSE_BRACKET
Rule 34    expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
Rule 35    expression -> NAME EQUALS expression
Rule 36    expression -> NAME
Rule 37    special -> condition thenBlock elseBlock
Rule 38    condition -> IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
Rule 39    thenBlock -> block
Rule 40    elseBlock -> ELSE block
Rule 41    elseBlock -> <empty>
Rule 42    special -> while_condition block
Rule 43    while_condition -> WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
Rule 44    statement -> PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
Rule 45    empty -> <empty>

Terminals, with rules where they appear

AND                  : 21
CLOSE_BRACKET        : 29 33 34
CLOSE_CURLY          : 1
CLOSE_PARENTHESIS    : 24 38 43 44
COMMA                : 30 31
DIVIDE               : 8
ELSE                 : 40
EQUALS               : 34 35
EQUALS_EQUALS        : 16
EXPONENT             : 20
FLOOR_DIV            : 19
GREATER_THAN         : 14
GREATER_THAN_EQUAL   : 15
IF                   : 38
IN                   : 
INT                  : 25
LESS_THAN            : 12
LESS_THAN_EQUAL      : 13
MINUS                : 11
MOD                  : 18
MULT                 : 9
NAME                 : 34 35 36
NOT                  : 23
NOT_EQUAL            : 17
OPEN_BRACKET         : 29 33 34
OPEN_CURLY           : 1
OPEN_PARENTHESIS     : 24 38 43 44
OR                   : 22
PLUS                 : 10
PRINT                : 44
REAL                 : 26
SEMI                 : 2 3
STRING               : 27
WHILE                : 43
error                : 

Nonterminals, with rules where they appear

block                : 39 40 42 0
condition            : 37
elseBlock            : 37
empty                : 
expression           : 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 24 30 30 31 32 33 33 34 34 35 38 43 44
inner                : 29 31
list                 : 28
special              : 4 5
statement            : 2 3
statement_list       : 1
statement_tail       : 2 3 4 5
thenBlock            : 37
while_condition      : 42

Parsing method: LALR

state 0

    (0) S' -> . block
    (1) block -> . OPEN_CURLY statement_list CLOSE_CURLY

    OPEN_CURLY      shift and go to state 1

    block                          shift and go to state 2

state 1

    (1) block -> OPEN_CURLY . statement_list CLOSE_CURLY
    (2) statement_list -> . statement SEMI statement_tail
    (4) statement_list -> . special statement_tail
    (7) statement -> . expression
    (44) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (37) special -> . condition thenBlock elseBlock
    (42) special -> . while_condition block
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (38) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (43) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    PRINT           shift and go to state 6
    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    IF              shift and go to state 5
    WHILE           shift and go to state 15
    OPEN_BRACKET    shift and go to state 17

    expression                     shift and go to state 3
    special                        shift and go to state 11
    statement                      shift and go to state 12
    condition                      shift and go to state 7
    statement_list                 shift and go to state 13
    list                           shift and go to state 16
    while_condition                shift and go to state 19

state 2

    (0) S' -> block .



state 3

    (7) statement -> expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    SEMI            reduce using rule 7 (statement -> expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27


state 4

    (26) expression -> REAL .

    DIVIDE          reduce using rule 26 (expression -> REAL .)
    MULT            reduce using rule 26 (expression -> REAL .)
    PLUS            reduce using rule 26 (expression -> REAL .)
    MINUS           reduce using rule 26 (expression -> REAL .)
    LESS_THAN       reduce using rule 26 (expression -> REAL .)
    LESS_THAN_EQUAL reduce using rule 26 (expression -> REAL .)
    GREATER_THAN    reduce using rule 26 (expression -> REAL .)
    GREATER_THAN_EQUAL reduce using rule 26 (expression -> REAL .)
    EQUALS_EQUALS   reduce using rule 26 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 26 (expression -> REAL .)
    MOD             reduce using rule 26 (expression -> REAL .)
    FLOOR_DIV       reduce using rule 26 (expression -> REAL .)
    EXPONENT        reduce using rule 26 (expression -> REAL .)
    AND             reduce using rule 26 (expression -> REAL .)
    OR              reduce using rule 26 (expression -> REAL .)
    OPEN_BRACKET    reduce using rule 26 (expression -> REAL .)
    SEMI            reduce using rule 26 (expression -> REAL .)
    CLOSE_PARENTHESIS reduce using rule 26 (expression -> REAL .)
    COMMA           reduce using rule 26 (expression -> REAL .)
    CLOSE_BRACKET   reduce using rule 26 (expression -> REAL .)


state 5

    (38) condition -> IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 36


state 6

    (44) statement -> PRINT . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 37


state 7

    (37) special -> condition . thenBlock elseBlock
    (39) thenBlock -> . block
    (1) block -> . OPEN_CURLY statement_list CLOSE_CURLY

    OPEN_CURLY      shift and go to state 1

    thenBlock                      shift and go to state 38
    block                          shift and go to state 39

state 8

    (34) expression -> NAME . OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> NAME . EQUALS expression
    (36) expression -> NAME .

    EQUALS          shift and go to state 40
    DIVIDE          reduce using rule 36 (expression -> NAME .)
    MULT            reduce using rule 36 (expression -> NAME .)
    PLUS            reduce using rule 36 (expression -> NAME .)
    MINUS           reduce using rule 36 (expression -> NAME .)
    LESS_THAN       reduce using rule 36 (expression -> NAME .)
    LESS_THAN_EQUAL reduce using rule 36 (expression -> NAME .)
    GREATER_THAN    reduce using rule 36 (expression -> NAME .)
    GREATER_THAN_EQUAL reduce using rule 36 (expression -> NAME .)
    EQUALS_EQUALS   reduce using rule 36 (expression -> NAME .)
    NOT_EQUAL       reduce using rule 36 (expression -> NAME .)
    MOD             reduce using rule 36 (expression -> NAME .)
    FLOOR_DIV       reduce using rule 36 (expression -> NAME .)
    EXPONENT        reduce using rule 36 (expression -> NAME .)
    AND             reduce using rule 36 (expression -> NAME .)
    OR              reduce using rule 36 (expression -> NAME .)
    OPEN_BRACKET    reduce using rule 36 (expression -> NAME .)
    SEMI            reduce using rule 36 (expression -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 36 (expression -> NAME .)
    COMMA           reduce using rule 36 (expression -> NAME .)
    CLOSE_BRACKET   reduce using rule 36 (expression -> NAME .)

  ! OPEN_BRACKET    [ shift and go to state 41 ]


state 9

    (23) expression -> NOT . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 42

state 10

    (24) expression -> OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 43

state 11

    (4) statement_list -> special . statement_tail
    (3) statement_tail -> . statement SEMI statement_tail
    (5) statement_tail -> . special statement_tail
    (6) statement_tail -> .
    (7) statement -> . expression
    (44) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (37) special -> . condition thenBlock elseBlock
    (42) special -> . while_condition block
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (38) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (43) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    CLOSE_CURLY     reduce using rule 6 (statement_tail -> .)
    PRINT           shift and go to state 6
    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    IF              shift and go to state 5
    WHILE           shift and go to state 15
    OPEN_BRACKET    shift and go to state 17

    expression                     shift and go to state 3
    statement_tail                 shift and go to state 44
    special                        shift and go to state 45
    statement                      shift and go to state 46
    list                           shift and go to state 16
    while_condition                shift and go to state 19
    condition                      shift and go to state 7

state 12

    (2) statement_list -> statement . SEMI statement_tail

    SEMI            shift and go to state 47


state 13

    (1) block -> OPEN_CURLY statement_list . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 48


state 14

    (27) expression -> STRING .

    DIVIDE          reduce using rule 27 (expression -> STRING .)
    MULT            reduce using rule 27 (expression -> STRING .)
    PLUS            reduce using rule 27 (expression -> STRING .)
    MINUS           reduce using rule 27 (expression -> STRING .)
    LESS_THAN       reduce using rule 27 (expression -> STRING .)
    LESS_THAN_EQUAL reduce using rule 27 (expression -> STRING .)
    GREATER_THAN    reduce using rule 27 (expression -> STRING .)
    GREATER_THAN_EQUAL reduce using rule 27 (expression -> STRING .)
    EQUALS_EQUALS   reduce using rule 27 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 27 (expression -> STRING .)
    MOD             reduce using rule 27 (expression -> STRING .)
    FLOOR_DIV       reduce using rule 27 (expression -> STRING .)
    EXPONENT        reduce using rule 27 (expression -> STRING .)
    AND             reduce using rule 27 (expression -> STRING .)
    OR              reduce using rule 27 (expression -> STRING .)
    OPEN_BRACKET    reduce using rule 27 (expression -> STRING .)
    SEMI            reduce using rule 27 (expression -> STRING .)
    CLOSE_PARENTHESIS reduce using rule 27 (expression -> STRING .)
    COMMA           reduce using rule 27 (expression -> STRING .)
    CLOSE_BRACKET   reduce using rule 27 (expression -> STRING .)


state 15

    (43) while_condition -> WHILE . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 49


state 16

    (28) expression -> list .

    DIVIDE          reduce using rule 28 (expression -> list .)
    MULT            reduce using rule 28 (expression -> list .)
    PLUS            reduce using rule 28 (expression -> list .)
    MINUS           reduce using rule 28 (expression -> list .)
    LESS_THAN       reduce using rule 28 (expression -> list .)
    LESS_THAN_EQUAL reduce using rule 28 (expression -> list .)
    GREATER_THAN    reduce using rule 28 (expression -> list .)
    GREATER_THAN_EQUAL reduce using rule 28 (expression -> list .)
    EQUALS_EQUALS   reduce using rule 28 (expression -> list .)
    NOT_EQUAL       reduce using rule 28 (expression -> list .)
    MOD             reduce using rule 28 (expression -> list .)
    FLOOR_DIV       reduce using rule 28 (expression -> list .)
    EXPONENT        reduce using rule 28 (expression -> list .)
    AND             reduce using rule 28 (expression -> list .)
    OR              reduce using rule 28 (expression -> list .)
    OPEN_BRACKET    reduce using rule 28 (expression -> list .)
    SEMI            reduce using rule 28 (expression -> list .)
    CLOSE_PARENTHESIS reduce using rule 28 (expression -> list .)
    COMMA           reduce using rule 28 (expression -> list .)
    CLOSE_BRACKET   reduce using rule 28 (expression -> list .)


state 17

    (29) list -> OPEN_BRACKET . inner CLOSE_BRACKET
    (30) inner -> . expression COMMA expression
    (31) inner -> . inner COMMA expression
    (32) inner -> . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    inner                          shift and go to state 51
    list                           shift and go to state 16
    expression                     shift and go to state 50

state 18

    (25) expression -> INT .

    DIVIDE          reduce using rule 25 (expression -> INT .)
    MULT            reduce using rule 25 (expression -> INT .)
    PLUS            reduce using rule 25 (expression -> INT .)
    MINUS           reduce using rule 25 (expression -> INT .)
    LESS_THAN       reduce using rule 25 (expression -> INT .)
    LESS_THAN_EQUAL reduce using rule 25 (expression -> INT .)
    GREATER_THAN    reduce using rule 25 (expression -> INT .)
    GREATER_THAN_EQUAL reduce using rule 25 (expression -> INT .)
    EQUALS_EQUALS   reduce using rule 25 (expression -> INT .)
    NOT_EQUAL       reduce using rule 25 (expression -> INT .)
    MOD             reduce using rule 25 (expression -> INT .)
    FLOOR_DIV       reduce using rule 25 (expression -> INT .)
    EXPONENT        reduce using rule 25 (expression -> INT .)
    AND             reduce using rule 25 (expression -> INT .)
    OR              reduce using rule 25 (expression -> INT .)
    OPEN_BRACKET    reduce using rule 25 (expression -> INT .)
    SEMI            reduce using rule 25 (expression -> INT .)
    CLOSE_PARENTHESIS reduce using rule 25 (expression -> INT .)
    COMMA           reduce using rule 25 (expression -> INT .)
    CLOSE_BRACKET   reduce using rule 25 (expression -> INT .)


state 19

    (42) special -> while_condition . block
    (1) block -> . OPEN_CURLY statement_list CLOSE_CURLY

    OPEN_CURLY      shift and go to state 1

    block                          shift and go to state 52

state 20

    (16) expression -> expression EQUALS_EQUALS . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 53

state 21

    (13) expression -> expression LESS_THAN_EQUAL . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 54

state 22

    (19) expression -> expression FLOOR_DIV . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 55

state 23

    (22) expression -> expression OR . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 56

state 24

    (10) expression -> expression PLUS . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 57

state 25

    (9) expression -> expression MULT . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 58

state 26

    (11) expression -> expression MINUS . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 59

state 27

    (33) expression -> expression OPEN_BRACKET . expression CLOSE_BRACKET
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 60

state 28

    (20) expression -> expression EXPONENT . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 61

state 29

    (18) expression -> expression MOD . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 62

state 30

    (14) expression -> expression GREATER_THAN . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 63

state 31

    (15) expression -> expression GREATER_THAN_EQUAL . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 64

state 32

    (21) expression -> expression AND . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 65

state 33

    (8) expression -> expression DIVIDE . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 66

state 34

    (17) expression -> expression NOT_EQUAL . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 67

state 35

    (12) expression -> expression LESS_THAN . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 68

state 36

    (38) condition -> IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 69

state 37

    (44) statement -> PRINT OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 70

state 38

    (37) special -> condition thenBlock . elseBlock
    (40) elseBlock -> . ELSE block
    (41) elseBlock -> .

    ELSE            shift and go to state 71
    PRINT           reduce using rule 41 (elseBlock -> .)
    NOT             reduce using rule 41 (elseBlock -> .)
    OPEN_PARENTHESIS reduce using rule 41 (elseBlock -> .)
    INT             reduce using rule 41 (elseBlock -> .)
    REAL            reduce using rule 41 (elseBlock -> .)
    STRING          reduce using rule 41 (elseBlock -> .)
    NAME            reduce using rule 41 (elseBlock -> .)
    IF              reduce using rule 41 (elseBlock -> .)
    WHILE           reduce using rule 41 (elseBlock -> .)
    OPEN_BRACKET    reduce using rule 41 (elseBlock -> .)
    CLOSE_CURLY     reduce using rule 41 (elseBlock -> .)

    elseBlock                      shift and go to state 72

state 39

    (39) thenBlock -> block .

    ELSE            reduce using rule 39 (thenBlock -> block .)
    PRINT           reduce using rule 39 (thenBlock -> block .)
    NOT             reduce using rule 39 (thenBlock -> block .)
    OPEN_PARENTHESIS reduce using rule 39 (thenBlock -> block .)
    INT             reduce using rule 39 (thenBlock -> block .)
    REAL            reduce using rule 39 (thenBlock -> block .)
    STRING          reduce using rule 39 (thenBlock -> block .)
    NAME            reduce using rule 39 (thenBlock -> block .)
    IF              reduce using rule 39 (thenBlock -> block .)
    WHILE           reduce using rule 39 (thenBlock -> block .)
    OPEN_BRACKET    reduce using rule 39 (thenBlock -> block .)
    CLOSE_CURLY     reduce using rule 39 (thenBlock -> block .)


state 40

    (35) expression -> NAME EQUALS . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 73

state 41

    (34) expression -> NAME OPEN_BRACKET . expression CLOSE_BRACKET EQUALS expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 74

state 42

    (23) expression -> NOT expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    AND             reduce using rule 23 (expression -> NOT expression .)
    OR              reduce using rule 23 (expression -> NOT expression .)
    SEMI            reduce using rule 23 (expression -> NOT expression .)
    CLOSE_PARENTHESIS reduce using rule 23 (expression -> NOT expression .)
    COMMA           reduce using rule 23 (expression -> NOT expression .)
    CLOSE_BRACKET   reduce using rule 23 (expression -> NOT expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 23 (expression -> NOT expression .) ]
  ! MULT            [ reduce using rule 23 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 23 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 23 (expression -> NOT expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 23 (expression -> NOT expression .) ]
  ! GREATER_THAN    [ reduce using rule 23 (expression -> NOT expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 23 (expression -> NOT expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 23 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 23 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 23 (expression -> NOT expression .) ]
  ! FLOOR_DIV       [ reduce using rule 23 (expression -> NOT expression .) ]
  ! EXPONENT        [ reduce using rule 23 (expression -> NOT expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 23 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 43

    (24) expression -> OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS shift and go to state 75
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27


state 44

    (4) statement_list -> special statement_tail .

    CLOSE_CURLY     reduce using rule 4 (statement_list -> special statement_tail .)


state 45

    (5) statement_tail -> special . statement_tail
    (3) statement_tail -> . statement SEMI statement_tail
    (5) statement_tail -> . special statement_tail
    (6) statement_tail -> .
    (7) statement -> . expression
    (44) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (37) special -> . condition thenBlock elseBlock
    (42) special -> . while_condition block
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (38) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (43) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    CLOSE_CURLY     reduce using rule 6 (statement_tail -> .)
    PRINT           shift and go to state 6
    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    IF              shift and go to state 5
    WHILE           shift and go to state 15
    OPEN_BRACKET    shift and go to state 17

    expression                     shift and go to state 3
    statement_tail                 shift and go to state 76
    special                        shift and go to state 45
    statement                      shift and go to state 46
    list                           shift and go to state 16
    while_condition                shift and go to state 19
    condition                      shift and go to state 7

state 46

    (3) statement_tail -> statement . SEMI statement_tail

    SEMI            shift and go to state 77


state 47

    (2) statement_list -> statement SEMI . statement_tail
    (3) statement_tail -> . statement SEMI statement_tail
    (5) statement_tail -> . special statement_tail
    (6) statement_tail -> .
    (7) statement -> . expression
    (44) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (37) special -> . condition thenBlock elseBlock
    (42) special -> . while_condition block
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (38) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (43) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    CLOSE_CURLY     reduce using rule 6 (statement_tail -> .)
    PRINT           shift and go to state 6
    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    IF              shift and go to state 5
    WHILE           shift and go to state 15
    OPEN_BRACKET    shift and go to state 17

    expression                     shift and go to state 3
    statement_tail                 shift and go to state 78
    special                        shift and go to state 45
    statement                      shift and go to state 46
    list                           shift and go to state 16
    while_condition                shift and go to state 19
    condition                      shift and go to state 7

state 48

    (1) block -> OPEN_CURLY statement_list CLOSE_CURLY .

    $end            reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    PRINT           reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    NOT             reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    OPEN_PARENTHESIS reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    INT             reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    REAL            reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    STRING          reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    NAME            reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    IF              reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    WHILE           reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    OPEN_BRACKET    reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    ELSE            reduce using rule 1 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)


state 49

    (43) while_condition -> WHILE OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 79

state 50

    (30) inner -> expression . COMMA expression
    (32) inner -> expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 80
    CLOSE_BRACKET   reduce using rule 32 (inner -> expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27

  ! COMMA           [ reduce using rule 32 (inner -> expression .) ]


state 51

    (29) list -> OPEN_BRACKET inner . CLOSE_BRACKET
    (31) inner -> inner . COMMA expression

    CLOSE_BRACKET   shift and go to state 82
    COMMA           shift and go to state 81


state 52

    (42) special -> while_condition block .

    PRINT           reduce using rule 42 (special -> while_condition block .)
    NOT             reduce using rule 42 (special -> while_condition block .)
    OPEN_PARENTHESIS reduce using rule 42 (special -> while_condition block .)
    INT             reduce using rule 42 (special -> while_condition block .)
    REAL            reduce using rule 42 (special -> while_condition block .)
    STRING          reduce using rule 42 (special -> while_condition block .)
    NAME            reduce using rule 42 (special -> while_condition block .)
    IF              reduce using rule 42 (special -> while_condition block .)
    WHILE           reduce using rule 42 (special -> while_condition block .)
    OPEN_BRACKET    reduce using rule 42 (special -> while_condition block .)
    CLOSE_CURLY     reduce using rule 42 (special -> while_condition block .)


state 53

    (16) expression -> expression EQUALS_EQUALS expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    LESS_THAN       reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    LESS_THAN_EQUAL reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    GREATER_THAN    reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    GREATER_THAN_EQUAL reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    EQUALS_EQUALS   reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    NOT_EQUAL       reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    AND             reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    OR              reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    SEMI            reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    CLOSE_PARENTHESIS reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    COMMA           reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    CLOSE_BRACKET   reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MULT            [ reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MOD             [ reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 16 (expression -> expression EQUALS_EQUALS expression .) ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 54

    (13) expression -> expression LESS_THAN_EQUAL expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    LESS_THAN       reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    EQUALS_EQUALS   reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    AND             reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    OR              reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    SEMI            reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    CLOSE_PARENTHESIS reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    COMMA           reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MULT            [ reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MOD             [ reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! FLOOR_DIV       [ reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 13 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 55

    (19) expression -> expression FLOOR_DIV expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    PLUS            reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    MINUS           reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    LESS_THAN       reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    LESS_THAN_EQUAL reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    GREATER_THAN    reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    GREATER_THAN_EQUAL reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    EQUALS_EQUALS   reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    NOT_EQUAL       reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    FLOOR_DIV       reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    AND             reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    OR              reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    SEMI            reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    CLOSE_PARENTHESIS reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    COMMA           reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    CLOSE_BRACKET   reduce using rule 19 (expression -> expression FLOOR_DIV expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    MOD             shift and go to state 29
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 19 (expression -> expression FLOOR_DIV expression .) ]
  ! MULT            [ reduce using rule 19 (expression -> expression FLOOR_DIV expression .) ]
  ! MOD             [ reduce using rule 19 (expression -> expression FLOOR_DIV expression .) ]
  ! EXPONENT        [ reduce using rule 19 (expression -> expression FLOOR_DIV expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 19 (expression -> expression FLOOR_DIV expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! FLOOR_DIV       [ shift and go to state 22 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 56

    (22) expression -> expression OR expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    OR              reduce using rule 22 (expression -> expression OR expression .)
    SEMI            reduce using rule 22 (expression -> expression OR expression .)
    CLOSE_PARENTHESIS reduce using rule 22 (expression -> expression OR expression .)
    COMMA           reduce using rule 22 (expression -> expression OR expression .)
    CLOSE_BRACKET   reduce using rule 22 (expression -> expression OR expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! MULT            [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! LESS_THAN       [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! FLOOR_DIV       [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 22 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 23 ]


state 57

    (10) expression -> expression PLUS expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    PLUS            reduce using rule 10 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 10 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 10 (expression -> expression PLUS expression .)
    LESS_THAN_EQUAL reduce using rule 10 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 10 (expression -> expression PLUS expression .)
    GREATER_THAN_EQUAL reduce using rule 10 (expression -> expression PLUS expression .)
    EQUALS_EQUALS   reduce using rule 10 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 10 (expression -> expression PLUS expression .)
    AND             reduce using rule 10 (expression -> expression PLUS expression .)
    OR              reduce using rule 10 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 10 (expression -> expression PLUS expression .)
    CLOSE_PARENTHESIS reduce using rule 10 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 10 (expression -> expression PLUS expression .)
    CLOSE_BRACKET   reduce using rule 10 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 10 (expression -> expression PLUS expression .) ]
  ! MULT            [ reduce using rule 10 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 10 (expression -> expression PLUS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 10 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 10 (expression -> expression PLUS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 10 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 58

    (9) expression -> expression MULT expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    DIVIDE          reduce using rule 9 (expression -> expression MULT expression .)
    MULT            reduce using rule 9 (expression -> expression MULT expression .)
    PLUS            reduce using rule 9 (expression -> expression MULT expression .)
    MINUS           reduce using rule 9 (expression -> expression MULT expression .)
    LESS_THAN       reduce using rule 9 (expression -> expression MULT expression .)
    LESS_THAN_EQUAL reduce using rule 9 (expression -> expression MULT expression .)
    GREATER_THAN    reduce using rule 9 (expression -> expression MULT expression .)
    GREATER_THAN_EQUAL reduce using rule 9 (expression -> expression MULT expression .)
    EQUALS_EQUALS   reduce using rule 9 (expression -> expression MULT expression .)
    NOT_EQUAL       reduce using rule 9 (expression -> expression MULT expression .)
    MOD             reduce using rule 9 (expression -> expression MULT expression .)
    FLOOR_DIV       reduce using rule 9 (expression -> expression MULT expression .)
    EXPONENT        reduce using rule 9 (expression -> expression MULT expression .)
    AND             reduce using rule 9 (expression -> expression MULT expression .)
    OR              reduce using rule 9 (expression -> expression MULT expression .)
    SEMI            reduce using rule 9 (expression -> expression MULT expression .)
    CLOSE_PARENTHESIS reduce using rule 9 (expression -> expression MULT expression .)
    COMMA           reduce using rule 9 (expression -> expression MULT expression .)
    CLOSE_BRACKET   reduce using rule 9 (expression -> expression MULT expression .)
    OPEN_BRACKET    shift and go to state 27

  ! OPEN_BRACKET    [ reduce using rule 9 (expression -> expression MULT expression .) ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MULT            [ shift and go to state 25 ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! MOD             [ shift and go to state 29 ]
  ! FLOOR_DIV       [ shift and go to state 22 ]
  ! EXPONENT        [ shift and go to state 28 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 59

    (11) expression -> expression MINUS expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    PLUS            reduce using rule 11 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 11 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 11 (expression -> expression MINUS expression .)
    LESS_THAN_EQUAL reduce using rule 11 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 11 (expression -> expression MINUS expression .)
    GREATER_THAN_EQUAL reduce using rule 11 (expression -> expression MINUS expression .)
    EQUALS_EQUALS   reduce using rule 11 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 11 (expression -> expression MINUS expression .)
    AND             reduce using rule 11 (expression -> expression MINUS expression .)
    OR              reduce using rule 11 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 11 (expression -> expression MINUS expression .)
    CLOSE_PARENTHESIS reduce using rule 11 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 11 (expression -> expression MINUS expression .)
    CLOSE_BRACKET   reduce using rule 11 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 11 (expression -> expression MINUS expression .) ]
  ! MULT            [ reduce using rule 11 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 11 (expression -> expression MINUS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 11 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 11 (expression -> expression MINUS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 11 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 60

    (33) expression -> expression OPEN_BRACKET expression . CLOSE_BRACKET
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 83
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27


state 61

    (20) expression -> expression EXPONENT expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    PLUS            reduce using rule 20 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 20 (expression -> expression EXPONENT expression .)
    LESS_THAN       reduce using rule 20 (expression -> expression EXPONENT expression .)
    LESS_THAN_EQUAL reduce using rule 20 (expression -> expression EXPONENT expression .)
    GREATER_THAN    reduce using rule 20 (expression -> expression EXPONENT expression .)
    GREATER_THAN_EQUAL reduce using rule 20 (expression -> expression EXPONENT expression .)
    EQUALS_EQUALS   reduce using rule 20 (expression -> expression EXPONENT expression .)
    NOT_EQUAL       reduce using rule 20 (expression -> expression EXPONENT expression .)
    FLOOR_DIV       reduce using rule 20 (expression -> expression EXPONENT expression .)
    EXPONENT        reduce using rule 20 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 20 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 20 (expression -> expression EXPONENT expression .)
    SEMI            reduce using rule 20 (expression -> expression EXPONENT expression .)
    CLOSE_PARENTHESIS reduce using rule 20 (expression -> expression EXPONENT expression .)
    COMMA           reduce using rule 20 (expression -> expression EXPONENT expression .)
    CLOSE_BRACKET   reduce using rule 20 (expression -> expression EXPONENT expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    MOD             shift and go to state 29
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 20 (expression -> expression EXPONENT expression .) ]
  ! MULT            [ reduce using rule 20 (expression -> expression EXPONENT expression .) ]
  ! MOD             [ reduce using rule 20 (expression -> expression EXPONENT expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 20 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! FLOOR_DIV       [ shift and go to state 22 ]
  ! EXPONENT        [ shift and go to state 28 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 62

    (18) expression -> expression MOD expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    PLUS            reduce using rule 18 (expression -> expression MOD expression .)
    MINUS           reduce using rule 18 (expression -> expression MOD expression .)
    LESS_THAN       reduce using rule 18 (expression -> expression MOD expression .)
    LESS_THAN_EQUAL reduce using rule 18 (expression -> expression MOD expression .)
    GREATER_THAN    reduce using rule 18 (expression -> expression MOD expression .)
    GREATER_THAN_EQUAL reduce using rule 18 (expression -> expression MOD expression .)
    EQUALS_EQUALS   reduce using rule 18 (expression -> expression MOD expression .)
    NOT_EQUAL       reduce using rule 18 (expression -> expression MOD expression .)
    MOD             reduce using rule 18 (expression -> expression MOD expression .)
    FLOOR_DIV       reduce using rule 18 (expression -> expression MOD expression .)
    EXPONENT        reduce using rule 18 (expression -> expression MOD expression .)
    AND             reduce using rule 18 (expression -> expression MOD expression .)
    OR              reduce using rule 18 (expression -> expression MOD expression .)
    SEMI            reduce using rule 18 (expression -> expression MOD expression .)
    CLOSE_PARENTHESIS reduce using rule 18 (expression -> expression MOD expression .)
    COMMA           reduce using rule 18 (expression -> expression MOD expression .)
    CLOSE_BRACKET   reduce using rule 18 (expression -> expression MOD expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 18 (expression -> expression MOD expression .) ]
  ! MULT            [ reduce using rule 18 (expression -> expression MOD expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 18 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! MOD             [ shift and go to state 29 ]
  ! FLOOR_DIV       [ shift and go to state 22 ]
  ! EXPONENT        [ shift and go to state 28 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 63

    (14) expression -> expression GREATER_THAN expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    LESS_THAN       reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    EQUALS_EQUALS   reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    AND             reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    OR              reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    SEMI            reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    CLOSE_PARENTHESIS reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    CLOSE_BRACKET   reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! MULT            [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! PLUS            [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! MOD             [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! FLOOR_DIV       [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! EXPONENT        [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 64

    (15) expression -> expression GREATER_THAN_EQUAL expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    LESS_THAN       reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    EQUALS_EQUALS   reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    AND             reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    OR              reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    SEMI            reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    CLOSE_PARENTHESIS reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    COMMA           reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MULT            [ reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MOD             [ reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! FLOOR_DIV       [ reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 15 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 65

    (21) expression -> expression AND expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    AND             reduce using rule 21 (expression -> expression AND expression .)
    OR              reduce using rule 21 (expression -> expression AND expression .)
    SEMI            reduce using rule 21 (expression -> expression AND expression .)
    CLOSE_PARENTHESIS reduce using rule 21 (expression -> expression AND expression .)
    COMMA           reduce using rule 21 (expression -> expression AND expression .)
    CLOSE_BRACKET   reduce using rule 21 (expression -> expression AND expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! MULT            [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! FLOOR_DIV       [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 66

    (8) expression -> expression DIVIDE expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    DIVIDE          reduce using rule 8 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 8 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 8 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 8 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 8 (expression -> expression DIVIDE expression .)
    LESS_THAN_EQUAL reduce using rule 8 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 8 (expression -> expression DIVIDE expression .)
    GREATER_THAN_EQUAL reduce using rule 8 (expression -> expression DIVIDE expression .)
    EQUALS_EQUALS   reduce using rule 8 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 8 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 8 (expression -> expression DIVIDE expression .)
    FLOOR_DIV       reduce using rule 8 (expression -> expression DIVIDE expression .)
    EXPONENT        reduce using rule 8 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 8 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 8 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 8 (expression -> expression DIVIDE expression .)
    CLOSE_PARENTHESIS reduce using rule 8 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 8 (expression -> expression DIVIDE expression .)
    CLOSE_BRACKET   reduce using rule 8 (expression -> expression DIVIDE expression .)
    OPEN_BRACKET    shift and go to state 27

  ! OPEN_BRACKET    [ reduce using rule 8 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MULT            [ shift and go to state 25 ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! MOD             [ shift and go to state 29 ]
  ! FLOOR_DIV       [ shift and go to state 22 ]
  ! EXPONENT        [ shift and go to state 28 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 67

    (17) expression -> expression NOT_EQUAL expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    LESS_THAN       reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    EQUALS_EQUALS   reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    SEMI            reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    CLOSE_PARENTHESIS reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 17 (expression -> expression NOT_EQUAL expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 17 (expression -> expression NOT_EQUAL expression .) ]
  ! MULT            [ reduce using rule 17 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 17 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression NOT_EQUAL expression .) ]
  ! MOD             [ reduce using rule 17 (expression -> expression NOT_EQUAL expression .) ]
  ! FLOOR_DIV       [ reduce using rule 17 (expression -> expression NOT_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 17 (expression -> expression NOT_EQUAL expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 17 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 68

    (12) expression -> expression LESS_THAN expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    LESS_THAN       reduce using rule 12 (expression -> expression LESS_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 12 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 12 (expression -> expression LESS_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 12 (expression -> expression LESS_THAN expression .)
    EQUALS_EQUALS   reduce using rule 12 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 12 (expression -> expression LESS_THAN expression .)
    AND             reduce using rule 12 (expression -> expression LESS_THAN expression .)
    OR              reduce using rule 12 (expression -> expression LESS_THAN expression .)
    SEMI            reduce using rule 12 (expression -> expression LESS_THAN expression .)
    CLOSE_PARENTHESIS reduce using rule 12 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 12 (expression -> expression LESS_THAN expression .)
    CLOSE_BRACKET   reduce using rule 12 (expression -> expression LESS_THAN expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 12 (expression -> expression LESS_THAN expression .) ]
  ! MULT            [ reduce using rule 12 (expression -> expression LESS_THAN expression .) ]
  ! PLUS            [ reduce using rule 12 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> expression LESS_THAN expression .) ]
  ! MOD             [ reduce using rule 12 (expression -> expression LESS_THAN expression .) ]
  ! FLOOR_DIV       [ reduce using rule 12 (expression -> expression LESS_THAN expression .) ]
  ! EXPONENT        [ reduce using rule 12 (expression -> expression LESS_THAN expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 12 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 35 ]
  ! LESS_THAN_EQUAL [ shift and go to state 21 ]
  ! GREATER_THAN    [ shift and go to state 30 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 31 ]
  ! EQUALS_EQUALS   [ shift and go to state 20 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 23 ]


state 69

    (38) condition -> IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS shift and go to state 84
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27


state 70

    (44) statement -> PRINT OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS shift and go to state 85
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27


state 71

    (40) elseBlock -> ELSE . block
    (1) block -> . OPEN_CURLY statement_list CLOSE_CURLY

    OPEN_CURLY      shift and go to state 1

    block                          shift and go to state 86

state 72

    (37) special -> condition thenBlock elseBlock .

    PRINT           reduce using rule 37 (special -> condition thenBlock elseBlock .)
    NOT             reduce using rule 37 (special -> condition thenBlock elseBlock .)
    OPEN_PARENTHESIS reduce using rule 37 (special -> condition thenBlock elseBlock .)
    INT             reduce using rule 37 (special -> condition thenBlock elseBlock .)
    REAL            reduce using rule 37 (special -> condition thenBlock elseBlock .)
    STRING          reduce using rule 37 (special -> condition thenBlock elseBlock .)
    NAME            reduce using rule 37 (special -> condition thenBlock elseBlock .)
    IF              reduce using rule 37 (special -> condition thenBlock elseBlock .)
    WHILE           reduce using rule 37 (special -> condition thenBlock elseBlock .)
    OPEN_BRACKET    reduce using rule 37 (special -> condition thenBlock elseBlock .)
    CLOSE_CURLY     reduce using rule 37 (special -> condition thenBlock elseBlock .)


state 73

    (35) expression -> NAME EQUALS expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    SEMI            reduce using rule 35 (expression -> NAME EQUALS expression .)
    CLOSE_PARENTHESIS reduce using rule 35 (expression -> NAME EQUALS expression .)
    COMMA           reduce using rule 35 (expression -> NAME EQUALS expression .)
    CLOSE_BRACKET   reduce using rule 35 (expression -> NAME EQUALS expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! MULT            [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! LESS_THAN       [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! GREATER_THAN    [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! AND             [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! OR              [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 35 (expression -> NAME EQUALS expression .) ]


state 74

    (34) expression -> NAME OPEN_BRACKET expression . CLOSE_BRACKET EQUALS expression
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 87
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27


state 75

    (24) expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    DIVIDE          reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    MULT            reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    LESS_THAN       reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    GREATER_THAN    reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    EQUALS_EQUALS   reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    MOD             reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    FLOOR_DIV       reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    EXPONENT        reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    AND             reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    OR              reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    SEMI            reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 24 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)


state 76

    (5) statement_tail -> special statement_tail .

    CLOSE_CURLY     reduce using rule 5 (statement_tail -> special statement_tail .)


state 77

    (3) statement_tail -> statement SEMI . statement_tail
    (3) statement_tail -> . statement SEMI statement_tail
    (5) statement_tail -> . special statement_tail
    (6) statement_tail -> .
    (7) statement -> . expression
    (44) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (37) special -> . condition thenBlock elseBlock
    (42) special -> . while_condition block
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (38) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (43) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    CLOSE_CURLY     reduce using rule 6 (statement_tail -> .)
    PRINT           shift and go to state 6
    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    IF              shift and go to state 5
    WHILE           shift and go to state 15
    OPEN_BRACKET    shift and go to state 17

    expression                     shift and go to state 3
    statement_tail                 shift and go to state 88
    special                        shift and go to state 45
    statement                      shift and go to state 46
    list                           shift and go to state 16
    while_condition                shift and go to state 19
    condition                      shift and go to state 7

state 78

    (2) statement_list -> statement SEMI statement_tail .

    CLOSE_CURLY     reduce using rule 2 (statement_list -> statement SEMI statement_tail .)


state 79

    (43) while_condition -> WHILE OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS shift and go to state 89
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27


state 80

    (30) inner -> expression COMMA . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 90

state 81

    (31) inner -> inner COMMA . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 91

state 82

    (29) list -> OPEN_BRACKET inner CLOSE_BRACKET .

    DIVIDE          reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    MULT            reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    PLUS            reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    MINUS           reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    LESS_THAN       reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    GREATER_THAN    reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    EQUALS_EQUALS   reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    NOT_EQUAL       reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    MOD             reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    FLOOR_DIV       reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    EXPONENT        reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    AND             reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    OR              reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    SEMI            reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    COMMA           reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 29 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)


state 83

    (33) expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .

    DIVIDE          reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    MULT            reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    PLUS            reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    MINUS           reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    LESS_THAN       reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    GREATER_THAN    reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    EQUALS_EQUALS   reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    NOT_EQUAL       reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    MOD             reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    FLOOR_DIV       reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    EXPONENT        reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    AND             reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    OR              reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    SEMI            reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    COMMA           reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 33 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)


state 84

    (38) condition -> IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    OPEN_CURLY      reduce using rule 38 (condition -> IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)


state 85

    (44) statement -> PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    SEMI            reduce using rule 44 (statement -> PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)


state 86

    (40) elseBlock -> ELSE block .

    PRINT           reduce using rule 40 (elseBlock -> ELSE block .)
    NOT             reduce using rule 40 (elseBlock -> ELSE block .)
    OPEN_PARENTHESIS reduce using rule 40 (elseBlock -> ELSE block .)
    INT             reduce using rule 40 (elseBlock -> ELSE block .)
    REAL            reduce using rule 40 (elseBlock -> ELSE block .)
    STRING          reduce using rule 40 (elseBlock -> ELSE block .)
    NAME            reduce using rule 40 (elseBlock -> ELSE block .)
    IF              reduce using rule 40 (elseBlock -> ELSE block .)
    WHILE           reduce using rule 40 (elseBlock -> ELSE block .)
    OPEN_BRACKET    reduce using rule 40 (elseBlock -> ELSE block .)
    CLOSE_CURLY     reduce using rule 40 (elseBlock -> ELSE block .)


state 87

    (34) expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET . EQUALS expression

    EQUALS          shift and go to state 92


state 88

    (3) statement_tail -> statement SEMI statement_tail .

    CLOSE_CURLY     reduce using rule 3 (statement_tail -> statement SEMI statement_tail .)


state 89

    (43) while_condition -> WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    OPEN_CURLY      reduce using rule 43 (while_condition -> WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)


state 90

    (30) inner -> expression COMMA expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_BRACKET   reduce using rule 30 (inner -> expression COMMA expression .)
    COMMA           reduce using rule 30 (inner -> expression COMMA expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27


state 91

    (31) inner -> inner COMMA expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_BRACKET   reduce using rule 31 (inner -> inner COMMA expression .)
    COMMA           reduce using rule 31 (inner -> inner COMMA expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27


state 92

    (34) expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS . expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression LESS_THAN expression
    (13) expression -> . expression LESS_THAN_EQUAL expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression GREATER_THAN_EQUAL expression
    (16) expression -> . expression EQUALS_EQUALS expression
    (17) expression -> . expression NOT_EQUAL expression
    (18) expression -> . expression MOD expression
    (19) expression -> . expression FLOOR_DIV expression
    (20) expression -> . expression EXPONENT expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression OR expression
    (23) expression -> . NOT expression
    (24) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (25) expression -> . INT
    (26) expression -> . REAL
    (27) expression -> . STRING
    (28) expression -> . list
    (33) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (34) expression -> . NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression
    (35) expression -> . NAME EQUALS expression
    (36) expression -> . NAME
    (29) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    NOT             shift and go to state 9
    OPEN_PARENTHESIS shift and go to state 10
    INT             shift and go to state 18
    REAL            shift and go to state 4
    STRING          shift and go to state 14
    NAME            shift and go to state 8
    OPEN_BRACKET    shift and go to state 17

    list                           shift and go to state 16
    expression                     shift and go to state 93

state 93

    (34) expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .
    (8) expression -> expression . DIVIDE expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . LESS_THAN expression
    (13) expression -> expression . LESS_THAN_EQUAL expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . GREATER_THAN_EQUAL expression
    (16) expression -> expression . EQUALS_EQUALS expression
    (17) expression -> expression . NOT_EQUAL expression
    (18) expression -> expression . MOD expression
    (19) expression -> expression . FLOOR_DIV expression
    (20) expression -> expression . EXPONENT expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . OR expression
    (33) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    SEMI            reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .)
    CLOSE_PARENTHESIS reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .)
    COMMA           reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .)
    CLOSE_BRACKET   reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .)
    DIVIDE          shift and go to state 33
    MULT            shift and go to state 25
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    LESS_THAN       shift and go to state 35
    LESS_THAN_EQUAL shift and go to state 21
    GREATER_THAN    shift and go to state 30
    GREATER_THAN_EQUAL shift and go to state 31
    EQUALS_EQUALS   shift and go to state 20
    NOT_EQUAL       shift and go to state 34
    MOD             shift and go to state 29
    FLOOR_DIV       shift and go to state 22
    EXPONENT        shift and go to state 28
    AND             shift and go to state 32
    OR              shift and go to state 23
    OPEN_BRACKET    shift and go to state 27

  ! DIVIDE          [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! MULT            [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! LESS_THAN       [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! GREATER_THAN    [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! AND             [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! OR              [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 34 (expression -> NAME OPEN_BRACKET expression CLOSE_BRACKET EQUALS expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 50 resolved as shift
