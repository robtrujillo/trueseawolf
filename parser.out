Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> pgrm_tail
Rule 2     pgrm_tail -> var_assign SEMI pgrm_tail
Rule 3     pgrm_tail -> block pgrm_tail
Rule 4     pgrm_tail -> <empty>
Rule 5     pgrm_tail -> function_def pgrm_tail
Rule 6     function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block
Rule 7     function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block
Rule 8     function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
Rule 9     function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 10    expression -> function_call
Rule 11    parameters -> expression COMMA expression
Rule 12    parameters -> parameters COMMA expression
Rule 13    parameters -> expression
Rule 14    expression -> return_stmt
Rule 15    return_stmt -> RETURN expression
Rule 16    block -> OPEN_CURLY statement_list CLOSE_CURLY
Rule 17    statement_list -> statement SEMI statement_tail
Rule 18    statement_tail -> statement SEMI statement_tail
Rule 19    statement_list -> special statement_tail
Rule 20    statement_tail -> special statement_tail
Rule 21    statement_tail -> <empty>
Rule 22    statement -> expression
Rule 23    expression -> expression DIVIDE expression
Rule 24    expression -> expression MULT expression
Rule 25    expression -> expression PLUS expression
Rule 26    expression -> expression MINUS expression
Rule 27    expression -> expression LESS_THAN expression
Rule 28    expression -> expression LESS_THAN_EQUAL expression
Rule 29    expression -> expression GREATER_THAN expression
Rule 30    expression -> expression GREATER_THAN_EQUAL expression
Rule 31    expression -> expression EQUALS_EQUALS expression
Rule 32    expression -> expression NOT_EQUAL expression
Rule 33    expression -> expression MOD expression
Rule 34    expression -> expression FLOOR_DIV expression
Rule 35    expression -> expression EXPONENT expression
Rule 36    expression -> expression AND expression
Rule 37    expression -> expression OR expression
Rule 38    expression -> NOT expression
Rule 39    expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
Rule 40    expression -> INT
Rule 41    expression -> REAL
Rule 42    expression -> STRING
Rule 43    expression -> list
Rule 44    list -> OPEN_BRACKET inner CLOSE_BRACKET
Rule 45    inner -> expression COMMA expression
Rule 46    inner -> inner COMMA expression
Rule 47    inner -> expression
Rule 48    expression -> expression OPEN_BRACKET expression CLOSE_BRACKET
Rule 49    expression -> var_assign
Rule 50    var_assign -> expression EQUALS expression
Rule 51    expression -> NAME
Rule 52    special -> condition thenBlock elseBlock
Rule 53    condition -> IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
Rule 54    thenBlock -> block
Rule 55    elseBlock -> ELSE block
Rule 56    elseBlock -> <empty>
Rule 57    special -> while_condition block
Rule 58    while_condition -> WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
Rule 59    statement -> PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

Terminals, with rules where they appear

AND                  : 36
CLOSE_BRACKET        : 44 48
CLOSE_CURLY          : 16
CLOSE_PARENTHESIS    : 6 7 8 9 39 53 58 59
COMMA                : 11 12 45 46
DIVIDE               : 23
ELSE                 : 55
EQUALS               : 50
EQUALS_EQUALS        : 31
EXPONENT             : 35
FLOOR_DIV            : 34
GREATER_THAN         : 29
GREATER_THAN_EQUAL   : 30
IF                   : 53
INT                  : 40
LESS_THAN            : 27
LESS_THAN_EQUAL      : 28
MINUS                : 26
MOD                  : 33
MULT                 : 24
NAME                 : 6 7 8 9 51
NOT                  : 38
NOT_EQUAL            : 32
OPEN_BRACKET         : 44 48
OPEN_CURLY           : 16
OPEN_PARENTHESIS     : 6 7 8 9 39 53 58 59
OR                   : 37
PLUS                 : 25
PRINT                : 59
REAL                 : 41
RETURN               : 15
SEMI                 : 2 17 18
STRING               : 42
WHILE                : 58
error                : 

Nonterminals, with rules where they appear

block                : 3 6 7 54 55 57
condition            : 52
elseBlock            : 52
expression           : 11 11 12 13 15 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 39 45 45 46 47 48 48 50 50 53 58 59
function_call        : 10
function_def         : 5
inner                : 44 46
list                 : 43
parameters           : 6 8 12
pgrm_tail            : 1 2 3 5
program              : 0
return_stmt          : 14
special              : 19 20
statement            : 17 18
statement_list       : 16
statement_tail       : 17 18 19 20
thenBlock            : 52
var_assign           : 2 49
while_condition      : 57

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . pgrm_tail
    (2) pgrm_tail -> . var_assign SEMI pgrm_tail
    (3) pgrm_tail -> . block pgrm_tail
    (4) pgrm_tail -> .
    (5) pgrm_tail -> . function_def pgrm_tail
    (50) var_assign -> . expression EQUALS expression
    (16) block -> . OPEN_CURLY statement_list CLOSE_CURLY
    (6) function_def -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block
    (7) function_def -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    $end            reduce using rule 4 (pgrm_tail -> .)
    OPEN_CURLY      shift and go to state 15
    NAME            shift and go to state 3
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    program                        shift and go to state 1
    function_def                   shift and go to state 2
    pgrm_tail                      shift and go to state 4
    return_stmt                    shift and go to state 14
    list                           shift and go to state 16
    function_call                  shift and go to state 6
    expression                     shift and go to state 11
    var_assign                     shift and go to state 9
    block                          shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (5) pgrm_tail -> function_def . pgrm_tail
    (2) pgrm_tail -> . var_assign SEMI pgrm_tail
    (3) pgrm_tail -> . block pgrm_tail
    (4) pgrm_tail -> .
    (5) pgrm_tail -> . function_def pgrm_tail
    (50) var_assign -> . expression EQUALS expression
    (16) block -> . OPEN_CURLY statement_list CLOSE_CURLY
    (6) function_def -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block
    (7) function_def -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    $end            reduce using rule 4 (pgrm_tail -> .)
    OPEN_CURLY      shift and go to state 15
    NAME            shift and go to state 3
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    list                           shift and go to state 16
    function_def                   shift and go to state 2
    pgrm_tail                      shift and go to state 19
    expression                     shift and go to state 11
    function_call                  shift and go to state 6
    var_assign                     shift and go to state 9
    block                          shift and go to state 10

state 3

    (6) function_def -> NAME . OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block
    (7) function_def -> NAME . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
    (51) expression -> NAME .
    (8) function_call -> NAME . OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> NAME . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 20
    EQUALS          reduce using rule 51 (expression -> NAME .)
    DIVIDE          reduce using rule 51 (expression -> NAME .)
    MULT            reduce using rule 51 (expression -> NAME .)
    PLUS            reduce using rule 51 (expression -> NAME .)
    MINUS           reduce using rule 51 (expression -> NAME .)
    LESS_THAN       reduce using rule 51 (expression -> NAME .)
    LESS_THAN_EQUAL reduce using rule 51 (expression -> NAME .)
    GREATER_THAN    reduce using rule 51 (expression -> NAME .)
    GREATER_THAN_EQUAL reduce using rule 51 (expression -> NAME .)
    EQUALS_EQUALS   reduce using rule 51 (expression -> NAME .)
    NOT_EQUAL       reduce using rule 51 (expression -> NAME .)
    MOD             reduce using rule 51 (expression -> NAME .)
    FLOOR_DIV       reduce using rule 51 (expression -> NAME .)
    EXPONENT        reduce using rule 51 (expression -> NAME .)
    AND             reduce using rule 51 (expression -> NAME .)
    OR              reduce using rule 51 (expression -> NAME .)
    OPEN_BRACKET    reduce using rule 51 (expression -> NAME .)


state 4

    (1) program -> pgrm_tail .

    $end            reduce using rule 1 (program -> pgrm_tail .)


state 5

    (42) expression -> STRING .

    DIVIDE          reduce using rule 42 (expression -> STRING .)
    MULT            reduce using rule 42 (expression -> STRING .)
    PLUS            reduce using rule 42 (expression -> STRING .)
    MINUS           reduce using rule 42 (expression -> STRING .)
    LESS_THAN       reduce using rule 42 (expression -> STRING .)
    LESS_THAN_EQUAL reduce using rule 42 (expression -> STRING .)
    GREATER_THAN    reduce using rule 42 (expression -> STRING .)
    GREATER_THAN_EQUAL reduce using rule 42 (expression -> STRING .)
    EQUALS_EQUALS   reduce using rule 42 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 42 (expression -> STRING .)
    MOD             reduce using rule 42 (expression -> STRING .)
    FLOOR_DIV       reduce using rule 42 (expression -> STRING .)
    EXPONENT        reduce using rule 42 (expression -> STRING .)
    AND             reduce using rule 42 (expression -> STRING .)
    OR              reduce using rule 42 (expression -> STRING .)
    OPEN_BRACKET    reduce using rule 42 (expression -> STRING .)
    EQUALS          reduce using rule 42 (expression -> STRING .)
    CLOSE_PARENTHESIS reduce using rule 42 (expression -> STRING .)
    COMMA           reduce using rule 42 (expression -> STRING .)
    SEMI            reduce using rule 42 (expression -> STRING .)
    CLOSE_BRACKET   reduce using rule 42 (expression -> STRING .)


state 6

    (10) expression -> function_call .

    DIVIDE          reduce using rule 10 (expression -> function_call .)
    MULT            reduce using rule 10 (expression -> function_call .)
    PLUS            reduce using rule 10 (expression -> function_call .)
    MINUS           reduce using rule 10 (expression -> function_call .)
    LESS_THAN       reduce using rule 10 (expression -> function_call .)
    LESS_THAN_EQUAL reduce using rule 10 (expression -> function_call .)
    GREATER_THAN    reduce using rule 10 (expression -> function_call .)
    GREATER_THAN_EQUAL reduce using rule 10 (expression -> function_call .)
    EQUALS_EQUALS   reduce using rule 10 (expression -> function_call .)
    NOT_EQUAL       reduce using rule 10 (expression -> function_call .)
    MOD             reduce using rule 10 (expression -> function_call .)
    FLOOR_DIV       reduce using rule 10 (expression -> function_call .)
    EXPONENT        reduce using rule 10 (expression -> function_call .)
    AND             reduce using rule 10 (expression -> function_call .)
    OR              reduce using rule 10 (expression -> function_call .)
    OPEN_BRACKET    reduce using rule 10 (expression -> function_call .)
    EQUALS          reduce using rule 10 (expression -> function_call .)
    CLOSE_PARENTHESIS reduce using rule 10 (expression -> function_call .)
    COMMA           reduce using rule 10 (expression -> function_call .)
    SEMI            reduce using rule 10 (expression -> function_call .)
    CLOSE_BRACKET   reduce using rule 10 (expression -> function_call .)


state 7

    (40) expression -> INT .

    DIVIDE          reduce using rule 40 (expression -> INT .)
    MULT            reduce using rule 40 (expression -> INT .)
    PLUS            reduce using rule 40 (expression -> INT .)
    MINUS           reduce using rule 40 (expression -> INT .)
    LESS_THAN       reduce using rule 40 (expression -> INT .)
    LESS_THAN_EQUAL reduce using rule 40 (expression -> INT .)
    GREATER_THAN    reduce using rule 40 (expression -> INT .)
    GREATER_THAN_EQUAL reduce using rule 40 (expression -> INT .)
    EQUALS_EQUALS   reduce using rule 40 (expression -> INT .)
    NOT_EQUAL       reduce using rule 40 (expression -> INT .)
    MOD             reduce using rule 40 (expression -> INT .)
    FLOOR_DIV       reduce using rule 40 (expression -> INT .)
    EXPONENT        reduce using rule 40 (expression -> INT .)
    AND             reduce using rule 40 (expression -> INT .)
    OR              reduce using rule 40 (expression -> INT .)
    OPEN_BRACKET    reduce using rule 40 (expression -> INT .)
    EQUALS          reduce using rule 40 (expression -> INT .)
    CLOSE_PARENTHESIS reduce using rule 40 (expression -> INT .)
    COMMA           reduce using rule 40 (expression -> INT .)
    SEMI            reduce using rule 40 (expression -> INT .)
    CLOSE_BRACKET   reduce using rule 40 (expression -> INT .)


state 8

    (15) return_stmt -> RETURN . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 23
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 9

    (2) pgrm_tail -> var_assign . SEMI pgrm_tail
    (49) expression -> var_assign .

    SEMI            shift and go to state 24
    EQUALS          reduce using rule 49 (expression -> var_assign .)
    DIVIDE          reduce using rule 49 (expression -> var_assign .)
    MULT            reduce using rule 49 (expression -> var_assign .)
    PLUS            reduce using rule 49 (expression -> var_assign .)
    MINUS           reduce using rule 49 (expression -> var_assign .)
    LESS_THAN       reduce using rule 49 (expression -> var_assign .)
    LESS_THAN_EQUAL reduce using rule 49 (expression -> var_assign .)
    GREATER_THAN    reduce using rule 49 (expression -> var_assign .)
    GREATER_THAN_EQUAL reduce using rule 49 (expression -> var_assign .)
    EQUALS_EQUALS   reduce using rule 49 (expression -> var_assign .)
    NOT_EQUAL       reduce using rule 49 (expression -> var_assign .)
    MOD             reduce using rule 49 (expression -> var_assign .)
    FLOOR_DIV       reduce using rule 49 (expression -> var_assign .)
    EXPONENT        reduce using rule 49 (expression -> var_assign .)
    AND             reduce using rule 49 (expression -> var_assign .)
    OR              reduce using rule 49 (expression -> var_assign .)
    OPEN_BRACKET    reduce using rule 49 (expression -> var_assign .)


state 10

    (3) pgrm_tail -> block . pgrm_tail
    (2) pgrm_tail -> . var_assign SEMI pgrm_tail
    (3) pgrm_tail -> . block pgrm_tail
    (4) pgrm_tail -> .
    (5) pgrm_tail -> . function_def pgrm_tail
    (50) var_assign -> . expression EQUALS expression
    (16) block -> . OPEN_CURLY statement_list CLOSE_CURLY
    (6) function_def -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block
    (7) function_def -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    $end            reduce using rule 4 (pgrm_tail -> .)
    OPEN_CURLY      shift and go to state 15
    NAME            shift and go to state 3
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    list                           shift and go to state 16
    function_def                   shift and go to state 2
    pgrm_tail                      shift and go to state 25
    expression                     shift and go to state 11
    function_call                  shift and go to state 6
    var_assign                     shift and go to state 9
    block                          shift and go to state 10

state 11

    (50) var_assign -> expression . EQUALS expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    EQUALS          shift and go to state 42
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39


state 12

    (41) expression -> REAL .

    DIVIDE          reduce using rule 41 (expression -> REAL .)
    MULT            reduce using rule 41 (expression -> REAL .)
    PLUS            reduce using rule 41 (expression -> REAL .)
    MINUS           reduce using rule 41 (expression -> REAL .)
    LESS_THAN       reduce using rule 41 (expression -> REAL .)
    LESS_THAN_EQUAL reduce using rule 41 (expression -> REAL .)
    GREATER_THAN    reduce using rule 41 (expression -> REAL .)
    GREATER_THAN_EQUAL reduce using rule 41 (expression -> REAL .)
    EQUALS_EQUALS   reduce using rule 41 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 41 (expression -> REAL .)
    MOD             reduce using rule 41 (expression -> REAL .)
    FLOOR_DIV       reduce using rule 41 (expression -> REAL .)
    EXPONENT        reduce using rule 41 (expression -> REAL .)
    AND             reduce using rule 41 (expression -> REAL .)
    OR              reduce using rule 41 (expression -> REAL .)
    OPEN_BRACKET    reduce using rule 41 (expression -> REAL .)
    EQUALS          reduce using rule 41 (expression -> REAL .)
    CLOSE_PARENTHESIS reduce using rule 41 (expression -> REAL .)
    COMMA           reduce using rule 41 (expression -> REAL .)
    SEMI            reduce using rule 41 (expression -> REAL .)
    CLOSE_BRACKET   reduce using rule 41 (expression -> REAL .)


state 13

    (39) expression -> OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 43
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 14

    (14) expression -> return_stmt .

    DIVIDE          reduce using rule 14 (expression -> return_stmt .)
    MULT            reduce using rule 14 (expression -> return_stmt .)
    PLUS            reduce using rule 14 (expression -> return_stmt .)
    MINUS           reduce using rule 14 (expression -> return_stmt .)
    LESS_THAN       reduce using rule 14 (expression -> return_stmt .)
    LESS_THAN_EQUAL reduce using rule 14 (expression -> return_stmt .)
    GREATER_THAN    reduce using rule 14 (expression -> return_stmt .)
    GREATER_THAN_EQUAL reduce using rule 14 (expression -> return_stmt .)
    EQUALS_EQUALS   reduce using rule 14 (expression -> return_stmt .)
    NOT_EQUAL       reduce using rule 14 (expression -> return_stmt .)
    MOD             reduce using rule 14 (expression -> return_stmt .)
    FLOOR_DIV       reduce using rule 14 (expression -> return_stmt .)
    EXPONENT        reduce using rule 14 (expression -> return_stmt .)
    AND             reduce using rule 14 (expression -> return_stmt .)
    OR              reduce using rule 14 (expression -> return_stmt .)
    OPEN_BRACKET    reduce using rule 14 (expression -> return_stmt .)
    EQUALS          reduce using rule 14 (expression -> return_stmt .)
    CLOSE_PARENTHESIS reduce using rule 14 (expression -> return_stmt .)
    COMMA           reduce using rule 14 (expression -> return_stmt .)
    SEMI            reduce using rule 14 (expression -> return_stmt .)
    CLOSE_BRACKET   reduce using rule 14 (expression -> return_stmt .)


state 15

    (16) block -> OPEN_CURLY . statement_list CLOSE_CURLY
    (17) statement_list -> . statement SEMI statement_tail
    (19) statement_list -> . special statement_tail
    (22) statement -> . expression
    (59) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (52) special -> . condition thenBlock elseBlock
    (57) special -> . while_condition block
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (53) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (58) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    PRINT           shift and go to state 49
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    IF              shift and go to state 52
    WHILE           shift and go to state 48
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    statement                      shift and go to state 46
    statement_list                 shift and go to state 50
    return_stmt                    shift and go to state 14
    condition                      shift and go to state 44
    function_call                  shift and go to state 6
    expression                     shift and go to state 51
    list                           shift and go to state 16
    special                        shift and go to state 47
    while_condition                shift and go to state 45
    var_assign                     shift and go to state 22

state 16

    (43) expression -> list .

    DIVIDE          reduce using rule 43 (expression -> list .)
    MULT            reduce using rule 43 (expression -> list .)
    PLUS            reduce using rule 43 (expression -> list .)
    MINUS           reduce using rule 43 (expression -> list .)
    LESS_THAN       reduce using rule 43 (expression -> list .)
    LESS_THAN_EQUAL reduce using rule 43 (expression -> list .)
    GREATER_THAN    reduce using rule 43 (expression -> list .)
    GREATER_THAN_EQUAL reduce using rule 43 (expression -> list .)
    EQUALS_EQUALS   reduce using rule 43 (expression -> list .)
    NOT_EQUAL       reduce using rule 43 (expression -> list .)
    MOD             reduce using rule 43 (expression -> list .)
    FLOOR_DIV       reduce using rule 43 (expression -> list .)
    EXPONENT        reduce using rule 43 (expression -> list .)
    AND             reduce using rule 43 (expression -> list .)
    OR              reduce using rule 43 (expression -> list .)
    OPEN_BRACKET    reduce using rule 43 (expression -> list .)
    EQUALS          reduce using rule 43 (expression -> list .)
    CLOSE_PARENTHESIS reduce using rule 43 (expression -> list .)
    COMMA           reduce using rule 43 (expression -> list .)
    SEMI            reduce using rule 43 (expression -> list .)
    CLOSE_BRACKET   reduce using rule 43 (expression -> list .)


state 17

    (38) expression -> NOT . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 53
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 18

    (44) list -> OPEN_BRACKET . inner CLOSE_BRACKET
    (45) inner -> . expression COMMA expression
    (46) inner -> . inner COMMA expression
    (47) inner -> . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    var_assign                     shift and go to state 22
    return_stmt                    shift and go to state 14
    inner                          shift and go to state 55
    expression                     shift and go to state 54
    list                           shift and go to state 16
    function_call                  shift and go to state 6

state 19

    (5) pgrm_tail -> function_def pgrm_tail .

    $end            reduce using rule 5 (pgrm_tail -> function_def pgrm_tail .)


state 20

    (6) function_def -> NAME OPEN_PARENTHESIS . parameters CLOSE_PARENTHESIS block
    (7) function_def -> NAME OPEN_PARENTHESIS . CLOSE_PARENTHESIS block
    (8) function_call -> NAME OPEN_PARENTHESIS . parameters CLOSE_PARENTHESIS
    (9) function_call -> NAME OPEN_PARENTHESIS . CLOSE_PARENTHESIS
    (11) parameters -> . expression COMMA expression
    (12) parameters -> . parameters COMMA expression
    (13) parameters -> . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    CLOSE_PARENTHESIS shift and go to state 57
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    var_assign                     shift and go to state 22
    expression                     shift and go to state 58
    list                           shift and go to state 16
    parameters                     shift and go to state 56
    function_call                  shift and go to state 6

state 21

    (51) expression -> NAME .
    (8) function_call -> NAME . OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> NAME . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    DIVIDE          reduce using rule 51 (expression -> NAME .)
    MULT            reduce using rule 51 (expression -> NAME .)
    PLUS            reduce using rule 51 (expression -> NAME .)
    MINUS           reduce using rule 51 (expression -> NAME .)
    LESS_THAN       reduce using rule 51 (expression -> NAME .)
    LESS_THAN_EQUAL reduce using rule 51 (expression -> NAME .)
    GREATER_THAN    reduce using rule 51 (expression -> NAME .)
    GREATER_THAN_EQUAL reduce using rule 51 (expression -> NAME .)
    EQUALS_EQUALS   reduce using rule 51 (expression -> NAME .)
    NOT_EQUAL       reduce using rule 51 (expression -> NAME .)
    MOD             reduce using rule 51 (expression -> NAME .)
    FLOOR_DIV       reduce using rule 51 (expression -> NAME .)
    EXPONENT        reduce using rule 51 (expression -> NAME .)
    AND             reduce using rule 51 (expression -> NAME .)
    OR              reduce using rule 51 (expression -> NAME .)
    OPEN_BRACKET    reduce using rule 51 (expression -> NAME .)
    EQUALS          reduce using rule 51 (expression -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 51 (expression -> NAME .)
    COMMA           reduce using rule 51 (expression -> NAME .)
    SEMI            reduce using rule 51 (expression -> NAME .)
    CLOSE_BRACKET   reduce using rule 51 (expression -> NAME .)
    OPEN_PARENTHESIS shift and go to state 59


state 22

    (49) expression -> var_assign .

    DIVIDE          reduce using rule 49 (expression -> var_assign .)
    MULT            reduce using rule 49 (expression -> var_assign .)
    PLUS            reduce using rule 49 (expression -> var_assign .)
    MINUS           reduce using rule 49 (expression -> var_assign .)
    LESS_THAN       reduce using rule 49 (expression -> var_assign .)
    LESS_THAN_EQUAL reduce using rule 49 (expression -> var_assign .)
    GREATER_THAN    reduce using rule 49 (expression -> var_assign .)
    GREATER_THAN_EQUAL reduce using rule 49 (expression -> var_assign .)
    EQUALS_EQUALS   reduce using rule 49 (expression -> var_assign .)
    NOT_EQUAL       reduce using rule 49 (expression -> var_assign .)
    MOD             reduce using rule 49 (expression -> var_assign .)
    FLOOR_DIV       reduce using rule 49 (expression -> var_assign .)
    EXPONENT        reduce using rule 49 (expression -> var_assign .)
    AND             reduce using rule 49 (expression -> var_assign .)
    OR              reduce using rule 49 (expression -> var_assign .)
    OPEN_BRACKET    reduce using rule 49 (expression -> var_assign .)
    EQUALS          reduce using rule 49 (expression -> var_assign .)
    CLOSE_PARENTHESIS reduce using rule 49 (expression -> var_assign .)
    COMMA           reduce using rule 49 (expression -> var_assign .)
    SEMI            reduce using rule 49 (expression -> var_assign .)
    CLOSE_BRACKET   reduce using rule 49 (expression -> var_assign .)


state 23

    (15) return_stmt -> RETURN expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for FLOOR_DIV resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for OPEN_BRACKET resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    CLOSE_PARENTHESIS reduce using rule 15 (return_stmt -> RETURN expression .)
    SEMI            reduce using rule 15 (return_stmt -> RETURN expression .)
    COMMA           reduce using rule 15 (return_stmt -> RETURN expression .)
    CLOSE_BRACKET   reduce using rule 15 (return_stmt -> RETURN expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42

  ! DIVIDE          [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! MULT            [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! PLUS            [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! MINUS           [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! LESS_THAN       [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! GREATER_THAN    [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! NOT_EQUAL       [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! MOD             [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! FLOOR_DIV       [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! EXPONENT        [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! AND             [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! OR              [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 15 (return_stmt -> RETURN expression .) ]
  ! EQUALS          [ reduce using rule 15 (return_stmt -> RETURN expression .) ]


state 24

    (2) pgrm_tail -> var_assign SEMI . pgrm_tail
    (2) pgrm_tail -> . var_assign SEMI pgrm_tail
    (3) pgrm_tail -> . block pgrm_tail
    (4) pgrm_tail -> .
    (5) pgrm_tail -> . function_def pgrm_tail
    (50) var_assign -> . expression EQUALS expression
    (16) block -> . OPEN_CURLY statement_list CLOSE_CURLY
    (6) function_def -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block
    (7) function_def -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET

    $end            reduce using rule 4 (pgrm_tail -> .)
    OPEN_CURLY      shift and go to state 15
    NAME            shift and go to state 3
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    list                           shift and go to state 16
    function_def                   shift and go to state 2
    pgrm_tail                      shift and go to state 60
    expression                     shift and go to state 11
    function_call                  shift and go to state 6
    var_assign                     shift and go to state 9
    block                          shift and go to state 10

state 25

    (3) pgrm_tail -> block pgrm_tail .

    $end            reduce using rule 3 (pgrm_tail -> block pgrm_tail .)


state 26

    (34) expression -> expression FLOOR_DIV . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 61
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 27

    (27) expression -> expression LESS_THAN . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 62
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 28

    (23) expression -> expression DIVIDE . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 63
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 29

    (36) expression -> expression AND . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 64
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 30

    (30) expression -> expression GREATER_THAN_EQUAL . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 65
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 31

    (32) expression -> expression NOT_EQUAL . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 66
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 32

    (25) expression -> expression PLUS . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 67
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 33

    (29) expression -> expression GREATER_THAN . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 68
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 34

    (28) expression -> expression LESS_THAN_EQUAL . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 69
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 35

    (31) expression -> expression EQUALS_EQUALS . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 70
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 36

    (37) expression -> expression OR . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 71
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 37

    (35) expression -> expression EXPONENT . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 72
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 38

    (26) expression -> expression MINUS . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 73
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 39

    (48) expression -> expression OPEN_BRACKET . expression CLOSE_BRACKET
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 74
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 40

    (33) expression -> expression MOD . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 75
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 41

    (24) expression -> expression MULT . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 76
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 42

    (50) var_assign -> expression EQUALS . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 77
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 43

    (39) expression -> OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    CLOSE_PARENTHESIS shift and go to state 78
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 44

    (52) special -> condition . thenBlock elseBlock
    (54) thenBlock -> . block
    (16) block -> . OPEN_CURLY statement_list CLOSE_CURLY

    OPEN_CURLY      shift and go to state 15

    thenBlock                      shift and go to state 79
    block                          shift and go to state 80

state 45

    (57) special -> while_condition . block
    (16) block -> . OPEN_CURLY statement_list CLOSE_CURLY

    OPEN_CURLY      shift and go to state 15

    block                          shift and go to state 81

state 46

    (17) statement_list -> statement . SEMI statement_tail

    SEMI            shift and go to state 82


state 47

    (19) statement_list -> special . statement_tail
    (18) statement_tail -> . statement SEMI statement_tail
    (20) statement_tail -> . special statement_tail
    (21) statement_tail -> .
    (22) statement -> . expression
    (59) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (52) special -> . condition thenBlock elseBlock
    (57) special -> . while_condition block
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (53) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (58) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    CLOSE_CURLY     reduce using rule 21 (statement_tail -> .)
    PRINT           shift and go to state 49
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    IF              shift and go to state 52
    WHILE           shift and go to state 48
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    list                           shift and go to state 16
    statement                      shift and go to state 84
    condition                      shift and go to state 44
    statement_tail                 shift and go to state 83
    function_call                  shift and go to state 6
    return_stmt                    shift and go to state 14
    expression                     shift and go to state 51
    special                        shift and go to state 85
    while_condition                shift and go to state 45
    var_assign                     shift and go to state 22

state 48

    (58) while_condition -> WHILE . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 86


state 49

    (59) statement -> PRINT . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 87


state 50

    (16) block -> OPEN_CURLY statement_list . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 88


state 51

    (22) statement -> expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    SEMI            reduce using rule 22 (statement -> expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 52

    (53) condition -> IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 89


state 53

    (38) expression -> NOT expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    AND             reduce using rule 38 (expression -> NOT expression .)
    OR              reduce using rule 38 (expression -> NOT expression .)
    EQUALS          reduce using rule 38 (expression -> NOT expression .)
    CLOSE_PARENTHESIS reduce using rule 38 (expression -> NOT expression .)
    COMMA           reduce using rule 38 (expression -> NOT expression .)
    SEMI            reduce using rule 38 (expression -> NOT expression .)
    CLOSE_BRACKET   reduce using rule 38 (expression -> NOT expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 38 (expression -> NOT expression .) ]
  ! MULT            [ reduce using rule 38 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 38 (expression -> NOT expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 38 (expression -> NOT expression .) ]
  ! GREATER_THAN    [ reduce using rule 38 (expression -> NOT expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 38 (expression -> NOT expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 38 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 38 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 38 (expression -> NOT expression .) ]
  ! FLOOR_DIV       [ reduce using rule 38 (expression -> NOT expression .) ]
  ! EXPONENT        [ reduce using rule 38 (expression -> NOT expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 38 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 54

    (45) inner -> expression . COMMA expression
    (47) inner -> expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 90
    CLOSE_BRACKET   reduce using rule 47 (inner -> expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42

  ! COMMA           [ reduce using rule 47 (inner -> expression .) ]


state 55

    (44) list -> OPEN_BRACKET inner . CLOSE_BRACKET
    (46) inner -> inner . COMMA expression

    CLOSE_BRACKET   shift and go to state 91
    COMMA           shift and go to state 92


state 56

    (6) function_def -> NAME OPEN_PARENTHESIS parameters . CLOSE_PARENTHESIS block
    (8) function_call -> NAME OPEN_PARENTHESIS parameters . CLOSE_PARENTHESIS
    (12) parameters -> parameters . COMMA expression

    CLOSE_PARENTHESIS shift and go to state 93
    COMMA           shift and go to state 94


state 57

    (7) function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS . block
    (9) function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .
    (16) block -> . OPEN_CURLY statement_list CLOSE_CURLY

    EQUALS          reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MULT            reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LESS_THAN       reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    GREATER_THAN    reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    EQUALS_EQUALS   reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MOD             reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FLOOR_DIV       reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    EXPONENT        reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_CURLY      shift and go to state 15

    block                          shift and go to state 95

state 58

    (11) parameters -> expression . COMMA expression
    (13) parameters -> expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 96
    CLOSE_PARENTHESIS reduce using rule 13 (parameters -> expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42

  ! COMMA           [ reduce using rule 13 (parameters -> expression .) ]


state 59

    (8) function_call -> NAME OPEN_PARENTHESIS . parameters CLOSE_PARENTHESIS
    (9) function_call -> NAME OPEN_PARENTHESIS . CLOSE_PARENTHESIS
    (11) parameters -> . expression COMMA expression
    (12) parameters -> . parameters COMMA expression
    (13) parameters -> . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    CLOSE_PARENTHESIS shift and go to state 98
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    var_assign                     shift and go to state 22
    expression                     shift and go to state 58
    list                           shift and go to state 16
    parameters                     shift and go to state 97
    function_call                  shift and go to state 6

state 60

    (2) pgrm_tail -> var_assign SEMI pgrm_tail .

    $end            reduce using rule 2 (pgrm_tail -> var_assign SEMI pgrm_tail .)


state 61

    (34) expression -> expression FLOOR_DIV expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    PLUS            reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    MINUS           reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    LESS_THAN       reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    LESS_THAN_EQUAL reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    GREATER_THAN    reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    GREATER_THAN_EQUAL reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    EQUALS_EQUALS   reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    NOT_EQUAL       reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    FLOOR_DIV       reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    AND             reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    OR              reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    EQUALS          reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    CLOSE_PARENTHESIS reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    COMMA           reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    SEMI            reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    CLOSE_BRACKET   reduce using rule 34 (expression -> expression FLOOR_DIV expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    MOD             shift and go to state 40
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 34 (expression -> expression FLOOR_DIV expression .) ]
  ! MULT            [ reduce using rule 34 (expression -> expression FLOOR_DIV expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression FLOOR_DIV expression .) ]
  ! EXPONENT        [ reduce using rule 34 (expression -> expression FLOOR_DIV expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 34 (expression -> expression FLOOR_DIV expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 38 ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! FLOOR_DIV       [ shift and go to state 26 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 62

    (27) expression -> expression LESS_THAN expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    LESS_THAN       reduce using rule 27 (expression -> expression LESS_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 27 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 27 (expression -> expression LESS_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 27 (expression -> expression LESS_THAN expression .)
    EQUALS_EQUALS   reduce using rule 27 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 27 (expression -> expression LESS_THAN expression .)
    AND             reduce using rule 27 (expression -> expression LESS_THAN expression .)
    OR              reduce using rule 27 (expression -> expression LESS_THAN expression .)
    EQUALS          reduce using rule 27 (expression -> expression LESS_THAN expression .)
    CLOSE_PARENTHESIS reduce using rule 27 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 27 (expression -> expression LESS_THAN expression .)
    SEMI            reduce using rule 27 (expression -> expression LESS_THAN expression .)
    CLOSE_BRACKET   reduce using rule 27 (expression -> expression LESS_THAN expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! MULT            [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! MOD             [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! FLOOR_DIV       [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! EXPONENT        [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 27 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 63

    (23) expression -> expression DIVIDE expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    DIVIDE          reduce using rule 23 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 23 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 23 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 23 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 23 (expression -> expression DIVIDE expression .)
    LESS_THAN_EQUAL reduce using rule 23 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 23 (expression -> expression DIVIDE expression .)
    GREATER_THAN_EQUAL reduce using rule 23 (expression -> expression DIVIDE expression .)
    EQUALS_EQUALS   reduce using rule 23 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 23 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 23 (expression -> expression DIVIDE expression .)
    FLOOR_DIV       reduce using rule 23 (expression -> expression DIVIDE expression .)
    EXPONENT        reduce using rule 23 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 23 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 23 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 23 (expression -> expression DIVIDE expression .)
    CLOSE_PARENTHESIS reduce using rule 23 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 23 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 23 (expression -> expression DIVIDE expression .)
    CLOSE_BRACKET   reduce using rule 23 (expression -> expression DIVIDE expression .)
    OPEN_BRACKET    shift and go to state 39

  ! OPEN_BRACKET    [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! MULT            [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 38 ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! MOD             [ shift and go to state 40 ]
  ! FLOOR_DIV       [ shift and go to state 26 ]
  ! EXPONENT        [ shift and go to state 37 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 64

    (36) expression -> expression AND expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    AND             reduce using rule 36 (expression -> expression AND expression .)
    OR              reduce using rule 36 (expression -> expression AND expression .)
    EQUALS          reduce using rule 36 (expression -> expression AND expression .)
    CLOSE_PARENTHESIS reduce using rule 36 (expression -> expression AND expression .)
    COMMA           reduce using rule 36 (expression -> expression AND expression .)
    SEMI            reduce using rule 36 (expression -> expression AND expression .)
    CLOSE_BRACKET   reduce using rule 36 (expression -> expression AND expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! MULT            [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! FLOOR_DIV       [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 36 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 65

    (30) expression -> expression GREATER_THAN_EQUAL expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    LESS_THAN       reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    EQUALS_EQUALS   reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    AND             reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    OR              reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    EQUALS          reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    CLOSE_PARENTHESIS reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    COMMA           reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    SEMI            reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MULT            [ reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! FLOOR_DIV       [ reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 30 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 66

    (32) expression -> expression NOT_EQUAL expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    LESS_THAN       reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    EQUALS_EQUALS   reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    EQUALS          reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    CLOSE_PARENTHESIS reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    SEMI            reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 32 (expression -> expression NOT_EQUAL expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! MULT            [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! FLOOR_DIV       [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 32 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 67

    (25) expression -> expression PLUS expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    PLUS            reduce using rule 25 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 25 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 25 (expression -> expression PLUS expression .)
    LESS_THAN_EQUAL reduce using rule 25 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 25 (expression -> expression PLUS expression .)
    GREATER_THAN_EQUAL reduce using rule 25 (expression -> expression PLUS expression .)
    EQUALS_EQUALS   reduce using rule 25 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 25 (expression -> expression PLUS expression .)
    AND             reduce using rule 25 (expression -> expression PLUS expression .)
    OR              reduce using rule 25 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 25 (expression -> expression PLUS expression .)
    CLOSE_PARENTHESIS reduce using rule 25 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 25 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 25 (expression -> expression PLUS expression .)
    CLOSE_BRACKET   reduce using rule 25 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! MULT            [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 38 ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 68

    (29) expression -> expression GREATER_THAN expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    LESS_THAN       reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    EQUALS_EQUALS   reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    AND             reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    OR              reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    EQUALS          reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    CLOSE_PARENTHESIS reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    SEMI            reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    CLOSE_BRACKET   reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! MULT            [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! PLUS            [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! FLOOR_DIV       [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! EXPONENT        [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 69

    (28) expression -> expression LESS_THAN_EQUAL expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    LESS_THAN       reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    EQUALS_EQUALS   reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    AND             reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    OR              reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    EQUALS          reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    CLOSE_PARENTHESIS reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    COMMA           reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    SEMI            reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MULT            [ reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MOD             [ reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! FLOOR_DIV       [ reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 28 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 70

    (31) expression -> expression EQUALS_EQUALS expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    LESS_THAN       reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    LESS_THAN_EQUAL reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    GREATER_THAN    reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    GREATER_THAN_EQUAL reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    EQUALS_EQUALS   reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    NOT_EQUAL       reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    AND             reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    OR              reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    EQUALS          reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    CLOSE_PARENTHESIS reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    COMMA           reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    SEMI            reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    CLOSE_BRACKET   reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MULT            [ reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 31 (expression -> expression EQUALS_EQUALS expression .) ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 71

    (37) expression -> expression OR expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    OR              reduce using rule 37 (expression -> expression OR expression .)
    EQUALS          reduce using rule 37 (expression -> expression OR expression .)
    CLOSE_PARENTHESIS reduce using rule 37 (expression -> expression OR expression .)
    COMMA           reduce using rule 37 (expression -> expression OR expression .)
    SEMI            reduce using rule 37 (expression -> expression OR expression .)
    CLOSE_BRACKET   reduce using rule 37 (expression -> expression OR expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! MULT            [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! LESS_THAN       [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! FLOOR_DIV       [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 72

    (35) expression -> expression EXPONENT expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    PLUS            reduce using rule 35 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 35 (expression -> expression EXPONENT expression .)
    LESS_THAN       reduce using rule 35 (expression -> expression EXPONENT expression .)
    LESS_THAN_EQUAL reduce using rule 35 (expression -> expression EXPONENT expression .)
    GREATER_THAN    reduce using rule 35 (expression -> expression EXPONENT expression .)
    GREATER_THAN_EQUAL reduce using rule 35 (expression -> expression EXPONENT expression .)
    EQUALS_EQUALS   reduce using rule 35 (expression -> expression EXPONENT expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression EXPONENT expression .)
    FLOOR_DIV       reduce using rule 35 (expression -> expression EXPONENT expression .)
    EXPONENT        reduce using rule 35 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 35 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 35 (expression -> expression EXPONENT expression .)
    EQUALS          reduce using rule 35 (expression -> expression EXPONENT expression .)
    CLOSE_PARENTHESIS reduce using rule 35 (expression -> expression EXPONENT expression .)
    COMMA           reduce using rule 35 (expression -> expression EXPONENT expression .)
    SEMI            reduce using rule 35 (expression -> expression EXPONENT expression .)
    CLOSE_BRACKET   reduce using rule 35 (expression -> expression EXPONENT expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    MOD             shift and go to state 40
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 35 (expression -> expression EXPONENT expression .) ]
  ! MULT            [ reduce using rule 35 (expression -> expression EXPONENT expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> expression EXPONENT expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 35 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 38 ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! FLOOR_DIV       [ shift and go to state 26 ]
  ! EXPONENT        [ shift and go to state 37 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 73

    (26) expression -> expression MINUS expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    PLUS            reduce using rule 26 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 26 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 26 (expression -> expression MINUS expression .)
    LESS_THAN_EQUAL reduce using rule 26 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 26 (expression -> expression MINUS expression .)
    GREATER_THAN_EQUAL reduce using rule 26 (expression -> expression MINUS expression .)
    EQUALS_EQUALS   reduce using rule 26 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 26 (expression -> expression MINUS expression .)
    AND             reduce using rule 26 (expression -> expression MINUS expression .)
    OR              reduce using rule 26 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 26 (expression -> expression MINUS expression .)
    CLOSE_PARENTHESIS reduce using rule 26 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 26 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 26 (expression -> expression MINUS expression .)
    CLOSE_BRACKET   reduce using rule 26 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! MULT            [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 38 ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 74

    (48) expression -> expression OPEN_BRACKET expression . CLOSE_BRACKET
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    CLOSE_BRACKET   shift and go to state 99
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 75

    (33) expression -> expression MOD expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    PLUS            reduce using rule 33 (expression -> expression MOD expression .)
    MINUS           reduce using rule 33 (expression -> expression MOD expression .)
    LESS_THAN       reduce using rule 33 (expression -> expression MOD expression .)
    LESS_THAN_EQUAL reduce using rule 33 (expression -> expression MOD expression .)
    GREATER_THAN    reduce using rule 33 (expression -> expression MOD expression .)
    GREATER_THAN_EQUAL reduce using rule 33 (expression -> expression MOD expression .)
    EQUALS_EQUALS   reduce using rule 33 (expression -> expression MOD expression .)
    NOT_EQUAL       reduce using rule 33 (expression -> expression MOD expression .)
    MOD             reduce using rule 33 (expression -> expression MOD expression .)
    FLOOR_DIV       reduce using rule 33 (expression -> expression MOD expression .)
    EXPONENT        reduce using rule 33 (expression -> expression MOD expression .)
    AND             reduce using rule 33 (expression -> expression MOD expression .)
    OR              reduce using rule 33 (expression -> expression MOD expression .)
    EQUALS          reduce using rule 33 (expression -> expression MOD expression .)
    CLOSE_PARENTHESIS reduce using rule 33 (expression -> expression MOD expression .)
    COMMA           reduce using rule 33 (expression -> expression MOD expression .)
    SEMI            reduce using rule 33 (expression -> expression MOD expression .)
    CLOSE_BRACKET   reduce using rule 33 (expression -> expression MOD expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! MULT            [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 38 ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! MOD             [ shift and go to state 40 ]
  ! FLOOR_DIV       [ shift and go to state 26 ]
  ! EXPONENT        [ shift and go to state 37 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 76

    (24) expression -> expression MULT expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    DIVIDE          reduce using rule 24 (expression -> expression MULT expression .)
    MULT            reduce using rule 24 (expression -> expression MULT expression .)
    PLUS            reduce using rule 24 (expression -> expression MULT expression .)
    MINUS           reduce using rule 24 (expression -> expression MULT expression .)
    LESS_THAN       reduce using rule 24 (expression -> expression MULT expression .)
    LESS_THAN_EQUAL reduce using rule 24 (expression -> expression MULT expression .)
    GREATER_THAN    reduce using rule 24 (expression -> expression MULT expression .)
    GREATER_THAN_EQUAL reduce using rule 24 (expression -> expression MULT expression .)
    EQUALS_EQUALS   reduce using rule 24 (expression -> expression MULT expression .)
    NOT_EQUAL       reduce using rule 24 (expression -> expression MULT expression .)
    MOD             reduce using rule 24 (expression -> expression MULT expression .)
    FLOOR_DIV       reduce using rule 24 (expression -> expression MULT expression .)
    EXPONENT        reduce using rule 24 (expression -> expression MULT expression .)
    AND             reduce using rule 24 (expression -> expression MULT expression .)
    OR              reduce using rule 24 (expression -> expression MULT expression .)
    EQUALS          reduce using rule 24 (expression -> expression MULT expression .)
    CLOSE_PARENTHESIS reduce using rule 24 (expression -> expression MULT expression .)
    COMMA           reduce using rule 24 (expression -> expression MULT expression .)
    SEMI            reduce using rule 24 (expression -> expression MULT expression .)
    CLOSE_BRACKET   reduce using rule 24 (expression -> expression MULT expression .)
    OPEN_BRACKET    shift and go to state 39

  ! OPEN_BRACKET    [ reduce using rule 24 (expression -> expression MULT expression .) ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! MULT            [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 38 ]
  ! LESS_THAN       [ shift and go to state 27 ]
  ! LESS_THAN_EQUAL [ shift and go to state 34 ]
  ! GREATER_THAN    [ shift and go to state 33 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 30 ]
  ! EQUALS_EQUALS   [ shift and go to state 35 ]
  ! NOT_EQUAL       [ shift and go to state 31 ]
  ! MOD             [ shift and go to state 40 ]
  ! FLOOR_DIV       [ shift and go to state 26 ]
  ! EXPONENT        [ shift and go to state 37 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 42 ]


state 77

    (50) var_assign -> expression EQUALS expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    EQUALS          reduce using rule 50 (var_assign -> expression EQUALS expression .)
    CLOSE_PARENTHESIS reduce using rule 50 (var_assign -> expression EQUALS expression .)
    SEMI            reduce using rule 50 (var_assign -> expression EQUALS expression .)
    COMMA           reduce using rule 50 (var_assign -> expression EQUALS expression .)
    CLOSE_BRACKET   reduce using rule 50 (var_assign -> expression EQUALS expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39

  ! DIVIDE          [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! MULT            [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! LESS_THAN       [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! GREATER_THAN    [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! MOD             [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 50 (var_assign -> expression EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 42 ]


state 78

    (39) expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    DIVIDE          reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    MULT            reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    LESS_THAN       reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    GREATER_THAN    reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    EQUALS_EQUALS   reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    MOD             reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    FLOOR_DIV       reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    EXPONENT        reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    AND             reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    OR              reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    EQUALS          reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    SEMI            reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 39 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)


state 79

    (52) special -> condition thenBlock . elseBlock
    (55) elseBlock -> . ELSE block
    (56) elseBlock -> .

    ELSE            shift and go to state 101
    PRINT           reduce using rule 56 (elseBlock -> .)
    NOT             reduce using rule 56 (elseBlock -> .)
    OPEN_PARENTHESIS reduce using rule 56 (elseBlock -> .)
    INT             reduce using rule 56 (elseBlock -> .)
    REAL            reduce using rule 56 (elseBlock -> .)
    STRING          reduce using rule 56 (elseBlock -> .)
    NAME            reduce using rule 56 (elseBlock -> .)
    IF              reduce using rule 56 (elseBlock -> .)
    WHILE           reduce using rule 56 (elseBlock -> .)
    RETURN          reduce using rule 56 (elseBlock -> .)
    OPEN_BRACKET    reduce using rule 56 (elseBlock -> .)
    CLOSE_CURLY     reduce using rule 56 (elseBlock -> .)

    elseBlock                      shift and go to state 100

state 80

    (54) thenBlock -> block .

    ELSE            reduce using rule 54 (thenBlock -> block .)
    PRINT           reduce using rule 54 (thenBlock -> block .)
    NOT             reduce using rule 54 (thenBlock -> block .)
    OPEN_PARENTHESIS reduce using rule 54 (thenBlock -> block .)
    INT             reduce using rule 54 (thenBlock -> block .)
    REAL            reduce using rule 54 (thenBlock -> block .)
    STRING          reduce using rule 54 (thenBlock -> block .)
    NAME            reduce using rule 54 (thenBlock -> block .)
    IF              reduce using rule 54 (thenBlock -> block .)
    WHILE           reduce using rule 54 (thenBlock -> block .)
    RETURN          reduce using rule 54 (thenBlock -> block .)
    OPEN_BRACKET    reduce using rule 54 (thenBlock -> block .)
    CLOSE_CURLY     reduce using rule 54 (thenBlock -> block .)


state 81

    (57) special -> while_condition block .

    PRINT           reduce using rule 57 (special -> while_condition block .)
    NOT             reduce using rule 57 (special -> while_condition block .)
    OPEN_PARENTHESIS reduce using rule 57 (special -> while_condition block .)
    INT             reduce using rule 57 (special -> while_condition block .)
    REAL            reduce using rule 57 (special -> while_condition block .)
    STRING          reduce using rule 57 (special -> while_condition block .)
    NAME            reduce using rule 57 (special -> while_condition block .)
    IF              reduce using rule 57 (special -> while_condition block .)
    WHILE           reduce using rule 57 (special -> while_condition block .)
    RETURN          reduce using rule 57 (special -> while_condition block .)
    OPEN_BRACKET    reduce using rule 57 (special -> while_condition block .)
    CLOSE_CURLY     reduce using rule 57 (special -> while_condition block .)


state 82

    (17) statement_list -> statement SEMI . statement_tail
    (18) statement_tail -> . statement SEMI statement_tail
    (20) statement_tail -> . special statement_tail
    (21) statement_tail -> .
    (22) statement -> . expression
    (59) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (52) special -> . condition thenBlock elseBlock
    (57) special -> . while_condition block
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (53) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (58) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    CLOSE_CURLY     reduce using rule 21 (statement_tail -> .)
    PRINT           shift and go to state 49
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    IF              shift and go to state 52
    WHILE           shift and go to state 48
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    list                           shift and go to state 16
    statement                      shift and go to state 84
    condition                      shift and go to state 44
    statement_tail                 shift and go to state 102
    function_call                  shift and go to state 6
    return_stmt                    shift and go to state 14
    expression                     shift and go to state 51
    special                        shift and go to state 85
    while_condition                shift and go to state 45
    var_assign                     shift and go to state 22

state 83

    (19) statement_list -> special statement_tail .

    CLOSE_CURLY     reduce using rule 19 (statement_list -> special statement_tail .)


state 84

    (18) statement_tail -> statement . SEMI statement_tail

    SEMI            shift and go to state 103


state 85

    (20) statement_tail -> special . statement_tail
    (18) statement_tail -> . statement SEMI statement_tail
    (20) statement_tail -> . special statement_tail
    (21) statement_tail -> .
    (22) statement -> . expression
    (59) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (52) special -> . condition thenBlock elseBlock
    (57) special -> . while_condition block
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (53) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (58) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    CLOSE_CURLY     reduce using rule 21 (statement_tail -> .)
    PRINT           shift and go to state 49
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    IF              shift and go to state 52
    WHILE           shift and go to state 48
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    list                           shift and go to state 16
    statement                      shift and go to state 84
    condition                      shift and go to state 44
    statement_tail                 shift and go to state 104
    function_call                  shift and go to state 6
    return_stmt                    shift and go to state 14
    expression                     shift and go to state 51
    special                        shift and go to state 85
    while_condition                shift and go to state 45
    var_assign                     shift and go to state 22

state 86

    (58) while_condition -> WHILE OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 105
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 87

    (59) statement -> PRINT OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 106
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 88

    (16) block -> OPEN_CURLY statement_list CLOSE_CURLY .

    PRINT           reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    NOT             reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    OPEN_PARENTHESIS reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    INT             reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    REAL            reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    STRING          reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    NAME            reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    IF              reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    WHILE           reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    RETURN          reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    OPEN_BRACKET    reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    OPEN_CURLY      reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    $end            reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)
    ELSE            reduce using rule 16 (block -> OPEN_CURLY statement_list CLOSE_CURLY .)


state 89

    (53) condition -> IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 107
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 90

    (45) inner -> expression COMMA . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 108
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 91

    (44) list -> OPEN_BRACKET inner CLOSE_BRACKET .

    DIVIDE          reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    MULT            reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    PLUS            reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    MINUS           reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    LESS_THAN       reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    GREATER_THAN    reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    EQUALS_EQUALS   reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    NOT_EQUAL       reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    MOD             reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    FLOOR_DIV       reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    EXPONENT        reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    AND             reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    OR              reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    EQUALS          reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    SEMI            reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)
    COMMA           reduce using rule 44 (list -> OPEN_BRACKET inner CLOSE_BRACKET .)


state 92

    (46) inner -> inner COMMA . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    var_assign                     shift and go to state 22
    return_stmt                    shift and go to state 14
    expression                     shift and go to state 109
    list                           shift and go to state 16
    function_call                  shift and go to state 6

state 93

    (6) function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS . block
    (8) function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .
    (16) block -> . OPEN_CURLY statement_list CLOSE_CURLY

    EQUALS          reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    MULT            reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    LESS_THAN       reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    GREATER_THAN    reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    EQUALS_EQUALS   reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    MOD             reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    FLOOR_DIV       reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    EXPONENT        reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    AND             reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    OR              reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    OPEN_CURLY      shift and go to state 15

    block                          shift and go to state 110

state 94

    (12) parameters -> parameters COMMA . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    var_assign                     shift and go to state 22
    expression                     shift and go to state 111
    list                           shift and go to state 16
    function_call                  shift and go to state 6

state 95

    (7) function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .

    OPEN_CURLY      reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)
    NAME            reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)
    NOT             reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)
    OPEN_PARENTHESIS reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)
    INT             reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)
    REAL            reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)
    STRING          reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)
    RETURN          reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)
    OPEN_BRACKET    reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)
    $end            reduce using rule 7 (function_def -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS block .)


state 96

    (11) parameters -> expression COMMA . expression
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    return_stmt                    shift and go to state 14
    function_call                  shift and go to state 6
    expression                     shift and go to state 112
    list                           shift and go to state 16
    var_assign                     shift and go to state 22

state 97

    (8) function_call -> NAME OPEN_PARENTHESIS parameters . CLOSE_PARENTHESIS
    (12) parameters -> parameters . COMMA expression

    CLOSE_PARENTHESIS shift and go to state 113
    COMMA           shift and go to state 94


state 98

    (9) function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    DIVIDE          reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MULT            reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LESS_THAN       reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    GREATER_THAN    reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    EQUALS_EQUALS   reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MOD             reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FLOOR_DIV       reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    EXPONENT        reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    EQUALS          reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMI            reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 9 (function_call -> NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 99

    (48) expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .

    DIVIDE          reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    MULT            reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    PLUS            reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    MINUS           reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    LESS_THAN       reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    GREATER_THAN    reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    EQUALS_EQUALS   reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    NOT_EQUAL       reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    MOD             reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    FLOOR_DIV       reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    EXPONENT        reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    AND             reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    OR              reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    EQUALS          reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    COMMA           reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    SEMI            reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 48 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)


state 100

    (52) special -> condition thenBlock elseBlock .

    PRINT           reduce using rule 52 (special -> condition thenBlock elseBlock .)
    NOT             reduce using rule 52 (special -> condition thenBlock elseBlock .)
    OPEN_PARENTHESIS reduce using rule 52 (special -> condition thenBlock elseBlock .)
    INT             reduce using rule 52 (special -> condition thenBlock elseBlock .)
    REAL            reduce using rule 52 (special -> condition thenBlock elseBlock .)
    STRING          reduce using rule 52 (special -> condition thenBlock elseBlock .)
    NAME            reduce using rule 52 (special -> condition thenBlock elseBlock .)
    IF              reduce using rule 52 (special -> condition thenBlock elseBlock .)
    WHILE           reduce using rule 52 (special -> condition thenBlock elseBlock .)
    RETURN          reduce using rule 52 (special -> condition thenBlock elseBlock .)
    OPEN_BRACKET    reduce using rule 52 (special -> condition thenBlock elseBlock .)
    CLOSE_CURLY     reduce using rule 52 (special -> condition thenBlock elseBlock .)


state 101

    (55) elseBlock -> ELSE . block
    (16) block -> . OPEN_CURLY statement_list CLOSE_CURLY

    OPEN_CURLY      shift and go to state 15

    block                          shift and go to state 114

state 102

    (17) statement_list -> statement SEMI statement_tail .

    CLOSE_CURLY     reduce using rule 17 (statement_list -> statement SEMI statement_tail .)


state 103

    (18) statement_tail -> statement SEMI . statement_tail
    (18) statement_tail -> . statement SEMI statement_tail
    (20) statement_tail -> . special statement_tail
    (21) statement_tail -> .
    (22) statement -> . expression
    (59) statement -> . PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (52) special -> . condition thenBlock elseBlock
    (57) special -> . while_condition block
    (10) expression -> . function_call
    (14) expression -> . return_stmt
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MULT expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression LESS_THAN expression
    (28) expression -> . expression LESS_THAN_EQUAL expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression GREATER_THAN_EQUAL expression
    (31) expression -> . expression EQUALS_EQUALS expression
    (32) expression -> . expression NOT_EQUAL expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression FLOOR_DIV expression
    (35) expression -> . expression EXPONENT expression
    (36) expression -> . expression AND expression
    (37) expression -> . expression OR expression
    (38) expression -> . NOT expression
    (39) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (40) expression -> . INT
    (41) expression -> . REAL
    (42) expression -> . STRING
    (43) expression -> . list
    (48) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (49) expression -> . var_assign
    (51) expression -> . NAME
    (53) condition -> . IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (58) while_condition -> . WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (8) function_call -> . NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS
    (9) function_call -> . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (15) return_stmt -> . RETURN expression
    (44) list -> . OPEN_BRACKET inner CLOSE_BRACKET
    (50) var_assign -> . expression EQUALS expression

    CLOSE_CURLY     reduce using rule 21 (statement_tail -> .)
    PRINT           shift and go to state 49
    NOT             shift and go to state 17
    OPEN_PARENTHESIS shift and go to state 13
    INT             shift and go to state 7
    REAL            shift and go to state 12
    STRING          shift and go to state 5
    NAME            shift and go to state 21
    IF              shift and go to state 52
    WHILE           shift and go to state 48
    RETURN          shift and go to state 8
    OPEN_BRACKET    shift and go to state 18

    list                           shift and go to state 16
    statement                      shift and go to state 84
    condition                      shift and go to state 44
    statement_tail                 shift and go to state 115
    function_call                  shift and go to state 6
    return_stmt                    shift and go to state 14
    expression                     shift and go to state 51
    special                        shift and go to state 85
    while_condition                shift and go to state 45
    var_assign                     shift and go to state 22

state 104

    (20) statement_tail -> special statement_tail .

    CLOSE_CURLY     reduce using rule 20 (statement_tail -> special statement_tail .)


state 105

    (58) while_condition -> WHILE OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    CLOSE_PARENTHESIS shift and go to state 116
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 106

    (59) statement -> PRINT OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    CLOSE_PARENTHESIS shift and go to state 117
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 107

    (53) condition -> IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    CLOSE_PARENTHESIS shift and go to state 118
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 108

    (45) inner -> expression COMMA expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    CLOSE_BRACKET   reduce using rule 45 (inner -> expression COMMA expression .)
    COMMA           reduce using rule 45 (inner -> expression COMMA expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 109

    (46) inner -> inner COMMA expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    CLOSE_BRACKET   reduce using rule 46 (inner -> inner COMMA expression .)
    COMMA           reduce using rule 46 (inner -> inner COMMA expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 110

    (6) function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .

    OPEN_CURLY      reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)
    NAME            reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)
    NOT             reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)
    OPEN_PARENTHESIS reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)
    INT             reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)
    REAL            reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)
    STRING          reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)
    RETURN          reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)
    OPEN_BRACKET    reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)
    $end            reduce using rule 6 (function_def -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block .)


state 111

    (12) parameters -> parameters COMMA expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    CLOSE_PARENTHESIS reduce using rule 12 (parameters -> parameters COMMA expression .)
    COMMA           reduce using rule 12 (parameters -> parameters COMMA expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 112

    (11) parameters -> expression COMMA expression .
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MULT expression
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . LESS_THAN expression
    (28) expression -> expression . LESS_THAN_EQUAL expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . GREATER_THAN_EQUAL expression
    (31) expression -> expression . EQUALS_EQUALS expression
    (32) expression -> expression . NOT_EQUAL expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . FLOOR_DIV expression
    (35) expression -> expression . EXPONENT expression
    (36) expression -> expression . AND expression
    (37) expression -> expression . OR expression
    (48) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET
    (50) var_assign -> expression . EQUALS expression

    CLOSE_PARENTHESIS reduce using rule 11 (parameters -> expression COMMA expression .)
    COMMA           reduce using rule 11 (parameters -> expression COMMA expression .)
    DIVIDE          shift and go to state 28
    MULT            shift and go to state 41
    PLUS            shift and go to state 32
    MINUS           shift and go to state 38
    LESS_THAN       shift and go to state 27
    LESS_THAN_EQUAL shift and go to state 34
    GREATER_THAN    shift and go to state 33
    GREATER_THAN_EQUAL shift and go to state 30
    EQUALS_EQUALS   shift and go to state 35
    NOT_EQUAL       shift and go to state 31
    MOD             shift and go to state 40
    FLOOR_DIV       shift and go to state 26
    EXPONENT        shift and go to state 37
    AND             shift and go to state 29
    OR              shift and go to state 36
    OPEN_BRACKET    shift and go to state 39
    EQUALS          shift and go to state 42


state 113

    (8) function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .

    DIVIDE          reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    MULT            reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    LESS_THAN       reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    GREATER_THAN    reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    EQUALS_EQUALS   reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    MOD             reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    FLOOR_DIV       reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    EXPONENT        reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    AND             reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    OR              reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    EQUALS          reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    SEMI            reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 8 (function_call -> NAME OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS .)


state 114

    (55) elseBlock -> ELSE block .

    PRINT           reduce using rule 55 (elseBlock -> ELSE block .)
    NOT             reduce using rule 55 (elseBlock -> ELSE block .)
    OPEN_PARENTHESIS reduce using rule 55 (elseBlock -> ELSE block .)
    INT             reduce using rule 55 (elseBlock -> ELSE block .)
    REAL            reduce using rule 55 (elseBlock -> ELSE block .)
    STRING          reduce using rule 55 (elseBlock -> ELSE block .)
    NAME            reduce using rule 55 (elseBlock -> ELSE block .)
    IF              reduce using rule 55 (elseBlock -> ELSE block .)
    WHILE           reduce using rule 55 (elseBlock -> ELSE block .)
    RETURN          reduce using rule 55 (elseBlock -> ELSE block .)
    OPEN_BRACKET    reduce using rule 55 (elseBlock -> ELSE block .)
    CLOSE_CURLY     reduce using rule 55 (elseBlock -> ELSE block .)


state 115

    (18) statement_tail -> statement SEMI statement_tail .

    CLOSE_CURLY     reduce using rule 18 (statement_tail -> statement SEMI statement_tail .)


state 116

    (58) while_condition -> WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    OPEN_CURLY      reduce using rule 58 (while_condition -> WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)


state 117

    (59) statement -> PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    SEMI            reduce using rule 59 (statement -> PRINT OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)


state 118

    (53) condition -> IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    OPEN_CURLY      reduce using rule 53 (condition -> IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DIVIDE in state 23 resolved as shift
WARNING: shift/reduce conflict for MULT in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 23 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 23 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 23 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 23 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 23 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 23 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 23 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 23 resolved as shift
WARNING: shift/reduce conflict for MOD in state 23 resolved as shift
WARNING: shift/reduce conflict for FLOOR_DIV in state 23 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 23 resolved as shift
WARNING: shift/reduce conflict for AND in state 23 resolved as shift
WARNING: shift/reduce conflict for OR in state 23 resolved as shift
WARNING: shift/reduce conflict for OPEN_BRACKET in state 23 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 23 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 54 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 58 resolved as shift
