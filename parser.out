Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    INT
    SEMI
    LIST
    IN

Grammar

Rule 0     S' -> calc
Rule 1     calc -> expression
Rule 2     calc -> var_assign
Rule 3     calc -> empty
Rule 4     var_assign -> NAME EQUALS expression
Rule 5     expression -> expression DIVIDE expression
Rule 6     expression -> expression MULT expression
Rule 7     expression -> expression PLUS expression
Rule 8     expression -> expression MINUS expression
Rule 9     expression -> expression LESS_THAN expression
Rule 10    expression -> expression LESS_THAN_EQUAL expression
Rule 11    expression -> expression GREATER_THAN expression
Rule 12    expression -> expression GREATER_THAN_EQUAL expression
Rule 13    expression -> expression EQUALS_EQUALS expression
Rule 14    expression -> expression NOT_EQUAL expression
Rule 15    expression -> expression MOD expression
Rule 16    expression -> expression FLOOR_DIV expression
Rule 17    expression -> expression EXPONENT expression
Rule 18    expression -> expression AND expression
Rule 19    expression -> expression OR expression
Rule 20    expression -> NOT expression
Rule 21    expression -> - expression
Rule 22    expression -> NAME
Rule 23    expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
Rule 24    expression -> REAL
Rule 25    expression -> STRING
Rule 26    expression -> expression OPEN_BRACKET expression CLOSE_BRACKET
Rule 27    list -> OPEN_BRACKET inner CLOSE_BRACKET
Rule 28    inner -> expression COMMA expression
Rule 29    inner -> inner COMMA expression
Rule 30    inner -> expression
Rule 31    block -> OPEN_CURLY statement_list CLOSE_CURLY
Rule 32    statement_list -> <empty>
Rule 33    statement -> expression
Rule 34    empty -> <empty>

Terminals, with rules where they appear

-                    : 21
AND                  : 18
CLOSE_BRACKET        : 26 27
CLOSE_CURLY          : 31
CLOSE_PARENTHESIS    : 23
COMMA                : 28 29
DIVIDE               : 5
EQUALS               : 4
EQUALS_EQUALS        : 13
EXPONENT             : 17
FLOOR_DIV            : 16
GREATER_THAN         : 11
GREATER_THAN_EQUAL   : 12
IN                   : 
INT                  : 
LESS_THAN            : 9
LESS_THAN_EQUAL      : 10
LIST                 : 
MINUS                : 8
MOD                  : 15
MULT                 : 6
NAME                 : 4 22
NOT                  : 20
NOT_EQUAL            : 14
OPEN_BRACKET         : 26 27
OPEN_CURLY           : 31
OPEN_PARENTHESIS     : 23
OR                   : 19
PLUS                 : 7
REAL                 : 24
SEMI                 : 
STRING               : 25
error                : 

Nonterminals, with rules where they appear

block                : 
calc                 : 0
empty                : 3
expression           : 1 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 21 23 26 26 28 28 29 30 33
inner                : 27 29
list                 : 
statement            : 
statement_list       : 31
var_assign           : 2

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . expression
    (2) calc -> . var_assign
    (3) calc -> . empty
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET
    (4) var_assign -> . NAME EQUALS expression
    (34) empty -> .

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 2
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10
    $end            reduce using rule 34 (empty -> .)

    expression                     shift and go to state 6
    var_assign                     shift and go to state 7
    calc                           shift and go to state 1
    empty                          shift and go to state 5

state 1

    (0) S' -> calc .



state 2

    (22) expression -> NAME .
    (4) var_assign -> NAME . EQUALS expression

    DIVIDE          reduce using rule 22 (expression -> NAME .)
    MULT            reduce using rule 22 (expression -> NAME .)
    PLUS            reduce using rule 22 (expression -> NAME .)
    MINUS           reduce using rule 22 (expression -> NAME .)
    LESS_THAN       reduce using rule 22 (expression -> NAME .)
    LESS_THAN_EQUAL reduce using rule 22 (expression -> NAME .)
    GREATER_THAN    reduce using rule 22 (expression -> NAME .)
    GREATER_THAN_EQUAL reduce using rule 22 (expression -> NAME .)
    EQUALS_EQUALS   reduce using rule 22 (expression -> NAME .)
    NOT_EQUAL       reduce using rule 22 (expression -> NAME .)
    MOD             reduce using rule 22 (expression -> NAME .)
    FLOOR_DIV       reduce using rule 22 (expression -> NAME .)
    EXPONENT        reduce using rule 22 (expression -> NAME .)
    AND             reduce using rule 22 (expression -> NAME .)
    OR              reduce using rule 22 (expression -> NAME .)
    OPEN_BRACKET    reduce using rule 22 (expression -> NAME .)
    $end            reduce using rule 22 (expression -> NAME .)
    EQUALS          shift and go to state 11


state 3

    (21) expression -> - . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 12

state 4

    (20) expression -> NOT . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 14

state 5

    (3) calc -> empty .

    $end            reduce using rule 3 (calc -> empty .)


state 6

    (1) calc -> expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    $end            reduce using rule 1 (calc -> expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    LESS_THAN       shift and go to state 21
    LESS_THAN_EQUAL shift and go to state 19
    GREATER_THAN    shift and go to state 24
    GREATER_THAN_EQUAL shift and go to state 15
    EQUALS_EQUALS   shift and go to state 18
    NOT_EQUAL       shift and go to state 22
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    AND             shift and go to state 28
    OR              shift and go to state 16
    OPEN_BRACKET    shift and go to state 17


state 7

    (2) calc -> var_assign .

    $end            reduce using rule 2 (calc -> var_assign .)


state 8

    (23) expression -> OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 31

state 9

    (24) expression -> REAL .

    CLOSE_PARENTHESIS reduce using rule 24 (expression -> REAL .)
    DIVIDE          reduce using rule 24 (expression -> REAL .)
    MULT            reduce using rule 24 (expression -> REAL .)
    PLUS            reduce using rule 24 (expression -> REAL .)
    MINUS           reduce using rule 24 (expression -> REAL .)
    LESS_THAN       reduce using rule 24 (expression -> REAL .)
    LESS_THAN_EQUAL reduce using rule 24 (expression -> REAL .)
    GREATER_THAN    reduce using rule 24 (expression -> REAL .)
    GREATER_THAN_EQUAL reduce using rule 24 (expression -> REAL .)
    EQUALS_EQUALS   reduce using rule 24 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 24 (expression -> REAL .)
    MOD             reduce using rule 24 (expression -> REAL .)
    FLOOR_DIV       reduce using rule 24 (expression -> REAL .)
    EXPONENT        reduce using rule 24 (expression -> REAL .)
    AND             reduce using rule 24 (expression -> REAL .)
    OR              reduce using rule 24 (expression -> REAL .)
    OPEN_BRACKET    reduce using rule 24 (expression -> REAL .)
    $end            reduce using rule 24 (expression -> REAL .)
    CLOSE_BRACKET   reduce using rule 24 (expression -> REAL .)


state 10

    (25) expression -> STRING .

    CLOSE_PARENTHESIS reduce using rule 25 (expression -> STRING .)
    DIVIDE          reduce using rule 25 (expression -> STRING .)
    MULT            reduce using rule 25 (expression -> STRING .)
    PLUS            reduce using rule 25 (expression -> STRING .)
    MINUS           reduce using rule 25 (expression -> STRING .)
    LESS_THAN       reduce using rule 25 (expression -> STRING .)
    LESS_THAN_EQUAL reduce using rule 25 (expression -> STRING .)
    GREATER_THAN    reduce using rule 25 (expression -> STRING .)
    GREATER_THAN_EQUAL reduce using rule 25 (expression -> STRING .)
    EQUALS_EQUALS   reduce using rule 25 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 25 (expression -> STRING .)
    MOD             reduce using rule 25 (expression -> STRING .)
    FLOOR_DIV       reduce using rule 25 (expression -> STRING .)
    EXPONENT        reduce using rule 25 (expression -> STRING .)
    AND             reduce using rule 25 (expression -> STRING .)
    OR              reduce using rule 25 (expression -> STRING .)
    OPEN_BRACKET    reduce using rule 25 (expression -> STRING .)
    $end            reduce using rule 25 (expression -> STRING .)
    CLOSE_BRACKET   reduce using rule 25 (expression -> STRING .)


state 11

    (4) var_assign -> NAME EQUALS . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 32

state 12

    (21) expression -> - expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 21 (expression -> - expression .)
    DIVIDE          reduce using rule 21 (expression -> - expression .)
    MULT            reduce using rule 21 (expression -> - expression .)
    PLUS            reduce using rule 21 (expression -> - expression .)
    MINUS           reduce using rule 21 (expression -> - expression .)
    LESS_THAN       reduce using rule 21 (expression -> - expression .)
    LESS_THAN_EQUAL reduce using rule 21 (expression -> - expression .)
    GREATER_THAN    reduce using rule 21 (expression -> - expression .)
    GREATER_THAN_EQUAL reduce using rule 21 (expression -> - expression .)
    EQUALS_EQUALS   reduce using rule 21 (expression -> - expression .)
    NOT_EQUAL       reduce using rule 21 (expression -> - expression .)
    MOD             reduce using rule 21 (expression -> - expression .)
    FLOOR_DIV       reduce using rule 21 (expression -> - expression .)
    EXPONENT        reduce using rule 21 (expression -> - expression .)
    AND             reduce using rule 21 (expression -> - expression .)
    OR              reduce using rule 21 (expression -> - expression .)
    $end            reduce using rule 21 (expression -> - expression .)
    CLOSE_BRACKET   reduce using rule 21 (expression -> - expression .)
    OPEN_BRACKET    shift and go to state 17

  ! OPEN_BRACKET    [ reduce using rule 21 (expression -> - expression .) ]
  ! DIVIDE          [ shift and go to state 26 ]
  ! MULT            [ shift and go to state 29 ]
  ! PLUS            [ shift and go to state 23 ]
  ! MINUS           [ shift and go to state 20 ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! MOD             [ shift and go to state 27 ]
  ! FLOOR_DIV       [ shift and go to state 30 ]
  ! EXPONENT        [ shift and go to state 25 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 13

    (22) expression -> NAME .

    CLOSE_PARENTHESIS reduce using rule 22 (expression -> NAME .)
    DIVIDE          reduce using rule 22 (expression -> NAME .)
    MULT            reduce using rule 22 (expression -> NAME .)
    PLUS            reduce using rule 22 (expression -> NAME .)
    MINUS           reduce using rule 22 (expression -> NAME .)
    LESS_THAN       reduce using rule 22 (expression -> NAME .)
    LESS_THAN_EQUAL reduce using rule 22 (expression -> NAME .)
    GREATER_THAN    reduce using rule 22 (expression -> NAME .)
    GREATER_THAN_EQUAL reduce using rule 22 (expression -> NAME .)
    EQUALS_EQUALS   reduce using rule 22 (expression -> NAME .)
    NOT_EQUAL       reduce using rule 22 (expression -> NAME .)
    MOD             reduce using rule 22 (expression -> NAME .)
    FLOOR_DIV       reduce using rule 22 (expression -> NAME .)
    EXPONENT        reduce using rule 22 (expression -> NAME .)
    AND             reduce using rule 22 (expression -> NAME .)
    OR              reduce using rule 22 (expression -> NAME .)
    OPEN_BRACKET    reduce using rule 22 (expression -> NAME .)
    $end            reduce using rule 22 (expression -> NAME .)
    CLOSE_BRACKET   reduce using rule 22 (expression -> NAME .)


state 14

    (20) expression -> NOT expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 20 (expression -> NOT expression .)
    AND             reduce using rule 20 (expression -> NOT expression .)
    OR              reduce using rule 20 (expression -> NOT expression .)
    $end            reduce using rule 20 (expression -> NOT expression .)
    CLOSE_BRACKET   reduce using rule 20 (expression -> NOT expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    LESS_THAN       shift and go to state 21
    LESS_THAN_EQUAL shift and go to state 19
    GREATER_THAN    shift and go to state 24
    GREATER_THAN_EQUAL shift and go to state 15
    EQUALS_EQUALS   shift and go to state 18
    NOT_EQUAL       shift and go to state 22
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 20 (expression -> NOT expression .) ]
  ! MULT            [ reduce using rule 20 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 20 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 20 (expression -> NOT expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 20 (expression -> NOT expression .) ]
  ! GREATER_THAN    [ reduce using rule 20 (expression -> NOT expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 20 (expression -> NOT expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 20 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 20 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 20 (expression -> NOT expression .) ]
  ! FLOOR_DIV       [ reduce using rule 20 (expression -> NOT expression .) ]
  ! EXPONENT        [ reduce using rule 20 (expression -> NOT expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 20 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 15

    (12) expression -> expression GREATER_THAN_EQUAL . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 33

state 16

    (19) expression -> expression OR . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 34

state 17

    (26) expression -> expression OPEN_BRACKET . expression CLOSE_BRACKET
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 35

state 18

    (13) expression -> expression EQUALS_EQUALS . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 36

state 19

    (10) expression -> expression LESS_THAN_EQUAL . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 37

state 20

    (8) expression -> expression MINUS . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 38

state 21

    (9) expression -> expression LESS_THAN . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 39

state 22

    (14) expression -> expression NOT_EQUAL . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 40

state 23

    (7) expression -> expression PLUS . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 41

state 24

    (11) expression -> expression GREATER_THAN . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 42

state 25

    (17) expression -> expression EXPONENT . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 43

state 26

    (5) expression -> expression DIVIDE . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 44

state 27

    (15) expression -> expression MOD . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 45

state 28

    (18) expression -> expression AND . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 46

state 29

    (6) expression -> expression MULT . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 47

state 30

    (16) expression -> expression FLOOR_DIV . expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . expression MULT expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression LESS_THAN expression
    (10) expression -> . expression LESS_THAN_EQUAL expression
    (11) expression -> . expression GREATER_THAN expression
    (12) expression -> . expression GREATER_THAN_EQUAL expression
    (13) expression -> . expression EQUALS_EQUALS expression
    (14) expression -> . expression NOT_EQUAL expression
    (15) expression -> . expression MOD expression
    (16) expression -> . expression FLOOR_DIV expression
    (17) expression -> . expression EXPONENT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . - expression
    (22) expression -> . NAME
    (23) expression -> . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
    (24) expression -> . REAL
    (25) expression -> . STRING
    (26) expression -> . expression OPEN_BRACKET expression CLOSE_BRACKET

    NOT             shift and go to state 4
    -               shift and go to state 3
    NAME            shift and go to state 13
    OPEN_PARENTHESIS shift and go to state 8
    REAL            shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 48

state 31

    (23) expression -> OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS shift and go to state 49
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    LESS_THAN       shift and go to state 21
    LESS_THAN_EQUAL shift and go to state 19
    GREATER_THAN    shift and go to state 24
    GREATER_THAN_EQUAL shift and go to state 15
    EQUALS_EQUALS   shift and go to state 18
    NOT_EQUAL       shift and go to state 22
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    AND             shift and go to state 28
    OR              shift and go to state 16
    OPEN_BRACKET    shift and go to state 17


state 32

    (4) var_assign -> NAME EQUALS expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    $end            reduce using rule 4 (var_assign -> NAME EQUALS expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    LESS_THAN       shift and go to state 21
    LESS_THAN_EQUAL shift and go to state 19
    GREATER_THAN    shift and go to state 24
    GREATER_THAN_EQUAL shift and go to state 15
    EQUALS_EQUALS   shift and go to state 18
    NOT_EQUAL       shift and go to state 22
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    AND             shift and go to state 28
    OR              shift and go to state 16
    OPEN_BRACKET    shift and go to state 17


state 33

    (12) expression -> expression GREATER_THAN_EQUAL expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    LESS_THAN       reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    EQUALS_EQUALS   reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    AND             reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    OR              reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    $end            reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MULT            [ reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MOD             [ reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! FLOOR_DIV       [ reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 12 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 34

    (19) expression -> expression OR expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 19 (expression -> expression OR expression .)
    OR              reduce using rule 19 (expression -> expression OR expression .)
    $end            reduce using rule 19 (expression -> expression OR expression .)
    CLOSE_BRACKET   reduce using rule 19 (expression -> expression OR expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    LESS_THAN       shift and go to state 21
    LESS_THAN_EQUAL shift and go to state 19
    GREATER_THAN    shift and go to state 24
    GREATER_THAN_EQUAL shift and go to state 15
    EQUALS_EQUALS   shift and go to state 18
    NOT_EQUAL       shift and go to state 22
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    AND             shift and go to state 28
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! MULT            [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! LESS_THAN       [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! FLOOR_DIV       [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 16 ]


state 35

    (26) expression -> expression OPEN_BRACKET expression . CLOSE_BRACKET
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 50
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    LESS_THAN       shift and go to state 21
    LESS_THAN_EQUAL shift and go to state 19
    GREATER_THAN    shift and go to state 24
    GREATER_THAN_EQUAL shift and go to state 15
    EQUALS_EQUALS   shift and go to state 18
    NOT_EQUAL       shift and go to state 22
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    AND             shift and go to state 28
    OR              shift and go to state 16
    OPEN_BRACKET    shift and go to state 17


state 36

    (13) expression -> expression EQUALS_EQUALS expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    LESS_THAN       reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    LESS_THAN_EQUAL reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    GREATER_THAN    reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    GREATER_THAN_EQUAL reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    EQUALS_EQUALS   reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    NOT_EQUAL       reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    AND             reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    OR              reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    $end            reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    CLOSE_BRACKET   reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MULT            [ reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .) ]
  ! MOD             [ reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 13 (expression -> expression EQUALS_EQUALS expression .) ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 37

    (10) expression -> expression LESS_THAN_EQUAL expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    LESS_THAN       reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN    reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    EQUALS_EQUALS   reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    NOT_EQUAL       reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    AND             reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    OR              reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    $end            reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MULT            [ reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MOD             [ reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! FLOOR_DIV       [ reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 10 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 38

    (8) expression -> expression MINUS expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 8 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 8 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 8 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 8 (expression -> expression MINUS expression .)
    LESS_THAN_EQUAL reduce using rule 8 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 8 (expression -> expression MINUS expression .)
    GREATER_THAN_EQUAL reduce using rule 8 (expression -> expression MINUS expression .)
    EQUALS_EQUALS   reduce using rule 8 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 8 (expression -> expression MINUS expression .)
    AND             reduce using rule 8 (expression -> expression MINUS expression .)
    OR              reduce using rule 8 (expression -> expression MINUS expression .)
    $end            reduce using rule 8 (expression -> expression MINUS expression .)
    CLOSE_BRACKET   reduce using rule 8 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! MULT            [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 23 ]
  ! MINUS           [ shift and go to state 20 ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 39

    (9) expression -> expression LESS_THAN expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 9 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 9 (expression -> expression LESS_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 9 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 9 (expression -> expression LESS_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 9 (expression -> expression LESS_THAN expression .)
    EQUALS_EQUALS   reduce using rule 9 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 9 (expression -> expression LESS_THAN expression .)
    AND             reduce using rule 9 (expression -> expression LESS_THAN expression .)
    OR              reduce using rule 9 (expression -> expression LESS_THAN expression .)
    $end            reduce using rule 9 (expression -> expression LESS_THAN expression .)
    CLOSE_BRACKET   reduce using rule 9 (expression -> expression LESS_THAN expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 9 (expression -> expression LESS_THAN expression .) ]
  ! MULT            [ reduce using rule 9 (expression -> expression LESS_THAN expression .) ]
  ! PLUS            [ reduce using rule 9 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression LESS_THAN expression .) ]
  ! MOD             [ reduce using rule 9 (expression -> expression LESS_THAN expression .) ]
  ! FLOOR_DIV       [ reduce using rule 9 (expression -> expression LESS_THAN expression .) ]
  ! EXPONENT        [ reduce using rule 9 (expression -> expression LESS_THAN expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 9 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 40

    (14) expression -> expression NOT_EQUAL expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN       reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN_EQUAL reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN_EQUAL reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    EQUALS_EQUALS   reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 14 (expression -> expression NOT_EQUAL expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 14 (expression -> expression NOT_EQUAL expression .) ]
  ! MULT            [ reduce using rule 14 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 14 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression NOT_EQUAL expression .) ]
  ! MOD             [ reduce using rule 14 (expression -> expression NOT_EQUAL expression .) ]
  ! FLOOR_DIV       [ reduce using rule 14 (expression -> expression NOT_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 14 (expression -> expression NOT_EQUAL expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 14 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 41

    (7) expression -> expression PLUS expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 7 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 7 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 7 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 7 (expression -> expression PLUS expression .)
    LESS_THAN_EQUAL reduce using rule 7 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 7 (expression -> expression PLUS expression .)
    GREATER_THAN_EQUAL reduce using rule 7 (expression -> expression PLUS expression .)
    EQUALS_EQUALS   reduce using rule 7 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 7 (expression -> expression PLUS expression .)
    AND             reduce using rule 7 (expression -> expression PLUS expression .)
    OR              reduce using rule 7 (expression -> expression PLUS expression .)
    $end            reduce using rule 7 (expression -> expression PLUS expression .)
    CLOSE_BRACKET   reduce using rule 7 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! MULT            [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! FLOOR_DIV       [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 23 ]
  ! MINUS           [ shift and go to state 20 ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 42

    (11) expression -> expression GREATER_THAN expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    LESS_THAN_EQUAL reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN_EQUAL reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    EQUALS_EQUALS   reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    AND             reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    OR              reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    CLOSE_BRACKET   reduce using rule 11 (expression -> expression GREATER_THAN expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 11 (expression -> expression GREATER_THAN expression .) ]
  ! MULT            [ reduce using rule 11 (expression -> expression GREATER_THAN expression .) ]
  ! PLUS            [ reduce using rule 11 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression GREATER_THAN expression .) ]
  ! MOD             [ reduce using rule 11 (expression -> expression GREATER_THAN expression .) ]
  ! FLOOR_DIV       [ reduce using rule 11 (expression -> expression GREATER_THAN expression .) ]
  ! EXPONENT        [ reduce using rule 11 (expression -> expression GREATER_THAN expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 11 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 43

    (17) expression -> expression EXPONENT expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 17 (expression -> expression EXPONENT expression .)
    PLUS            reduce using rule 17 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 17 (expression -> expression EXPONENT expression .)
    LESS_THAN       reduce using rule 17 (expression -> expression EXPONENT expression .)
    LESS_THAN_EQUAL reduce using rule 17 (expression -> expression EXPONENT expression .)
    GREATER_THAN    reduce using rule 17 (expression -> expression EXPONENT expression .)
    GREATER_THAN_EQUAL reduce using rule 17 (expression -> expression EXPONENT expression .)
    EQUALS_EQUALS   reduce using rule 17 (expression -> expression EXPONENT expression .)
    NOT_EQUAL       reduce using rule 17 (expression -> expression EXPONENT expression .)
    FLOOR_DIV       reduce using rule 17 (expression -> expression EXPONENT expression .)
    EXPONENT        reduce using rule 17 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 17 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 17 (expression -> expression EXPONENT expression .)
    $end            reduce using rule 17 (expression -> expression EXPONENT expression .)
    CLOSE_BRACKET   reduce using rule 17 (expression -> expression EXPONENT expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    MOD             shift and go to state 27
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 17 (expression -> expression EXPONENT expression .) ]
  ! MULT            [ reduce using rule 17 (expression -> expression EXPONENT expression .) ]
  ! MOD             [ reduce using rule 17 (expression -> expression EXPONENT expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 17 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 23 ]
  ! MINUS           [ shift and go to state 20 ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! FLOOR_DIV       [ shift and go to state 30 ]
  ! EXPONENT        [ shift and go to state 25 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 44

    (5) expression -> expression DIVIDE expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 5 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 5 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 5 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 5 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 5 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 5 (expression -> expression DIVIDE expression .)
    LESS_THAN_EQUAL reduce using rule 5 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 5 (expression -> expression DIVIDE expression .)
    GREATER_THAN_EQUAL reduce using rule 5 (expression -> expression DIVIDE expression .)
    EQUALS_EQUALS   reduce using rule 5 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 5 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 5 (expression -> expression DIVIDE expression .)
    FLOOR_DIV       reduce using rule 5 (expression -> expression DIVIDE expression .)
    EXPONENT        reduce using rule 5 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 5 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 5 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 5 (expression -> expression DIVIDE expression .)
    CLOSE_BRACKET   reduce using rule 5 (expression -> expression DIVIDE expression .)
    OPEN_BRACKET    shift and go to state 17

  ! OPEN_BRACKET    [ reduce using rule 5 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ shift and go to state 26 ]
  ! MULT            [ shift and go to state 29 ]
  ! PLUS            [ shift and go to state 23 ]
  ! MINUS           [ shift and go to state 20 ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! MOD             [ shift and go to state 27 ]
  ! FLOOR_DIV       [ shift and go to state 30 ]
  ! EXPONENT        [ shift and go to state 25 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 45

    (15) expression -> expression MOD expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 15 (expression -> expression MOD expression .)
    PLUS            reduce using rule 15 (expression -> expression MOD expression .)
    MINUS           reduce using rule 15 (expression -> expression MOD expression .)
    LESS_THAN       reduce using rule 15 (expression -> expression MOD expression .)
    LESS_THAN_EQUAL reduce using rule 15 (expression -> expression MOD expression .)
    GREATER_THAN    reduce using rule 15 (expression -> expression MOD expression .)
    GREATER_THAN_EQUAL reduce using rule 15 (expression -> expression MOD expression .)
    EQUALS_EQUALS   reduce using rule 15 (expression -> expression MOD expression .)
    NOT_EQUAL       reduce using rule 15 (expression -> expression MOD expression .)
    MOD             reduce using rule 15 (expression -> expression MOD expression .)
    FLOOR_DIV       reduce using rule 15 (expression -> expression MOD expression .)
    EXPONENT        reduce using rule 15 (expression -> expression MOD expression .)
    AND             reduce using rule 15 (expression -> expression MOD expression .)
    OR              reduce using rule 15 (expression -> expression MOD expression .)
    $end            reduce using rule 15 (expression -> expression MOD expression .)
    CLOSE_BRACKET   reduce using rule 15 (expression -> expression MOD expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 15 (expression -> expression MOD expression .) ]
  ! MULT            [ reduce using rule 15 (expression -> expression MOD expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 15 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 23 ]
  ! MINUS           [ shift and go to state 20 ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! MOD             [ shift and go to state 27 ]
  ! FLOOR_DIV       [ shift and go to state 30 ]
  ! EXPONENT        [ shift and go to state 25 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 46

    (18) expression -> expression AND expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 18 (expression -> expression AND expression .)
    AND             reduce using rule 18 (expression -> expression AND expression .)
    OR              reduce using rule 18 (expression -> expression AND expression .)
    $end            reduce using rule 18 (expression -> expression AND expression .)
    CLOSE_BRACKET   reduce using rule 18 (expression -> expression AND expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    LESS_THAN       shift and go to state 21
    LESS_THAN_EQUAL shift and go to state 19
    GREATER_THAN    shift and go to state 24
    GREATER_THAN_EQUAL shift and go to state 15
    EQUALS_EQUALS   shift and go to state 18
    NOT_EQUAL       shift and go to state 22
    MOD             shift and go to state 27
    FLOOR_DIV       shift and go to state 30
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! MULT            [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! EQUALS_EQUALS   [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! FLOOR_DIV       [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 47

    (6) expression -> expression MULT expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 6 (expression -> expression MULT expression .)
    DIVIDE          reduce using rule 6 (expression -> expression MULT expression .)
    MULT            reduce using rule 6 (expression -> expression MULT expression .)
    PLUS            reduce using rule 6 (expression -> expression MULT expression .)
    MINUS           reduce using rule 6 (expression -> expression MULT expression .)
    LESS_THAN       reduce using rule 6 (expression -> expression MULT expression .)
    LESS_THAN_EQUAL reduce using rule 6 (expression -> expression MULT expression .)
    GREATER_THAN    reduce using rule 6 (expression -> expression MULT expression .)
    GREATER_THAN_EQUAL reduce using rule 6 (expression -> expression MULT expression .)
    EQUALS_EQUALS   reduce using rule 6 (expression -> expression MULT expression .)
    NOT_EQUAL       reduce using rule 6 (expression -> expression MULT expression .)
    MOD             reduce using rule 6 (expression -> expression MULT expression .)
    FLOOR_DIV       reduce using rule 6 (expression -> expression MULT expression .)
    EXPONENT        reduce using rule 6 (expression -> expression MULT expression .)
    AND             reduce using rule 6 (expression -> expression MULT expression .)
    OR              reduce using rule 6 (expression -> expression MULT expression .)
    $end            reduce using rule 6 (expression -> expression MULT expression .)
    CLOSE_BRACKET   reduce using rule 6 (expression -> expression MULT expression .)
    OPEN_BRACKET    shift and go to state 17

  ! OPEN_BRACKET    [ reduce using rule 6 (expression -> expression MULT expression .) ]
  ! DIVIDE          [ shift and go to state 26 ]
  ! MULT            [ shift and go to state 29 ]
  ! PLUS            [ shift and go to state 23 ]
  ! MINUS           [ shift and go to state 20 ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! MOD             [ shift and go to state 27 ]
  ! FLOOR_DIV       [ shift and go to state 30 ]
  ! EXPONENT        [ shift and go to state 25 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 48

    (16) expression -> expression FLOOR_DIV expression .
    (5) expression -> expression . DIVIDE expression
    (6) expression -> expression . MULT expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . LESS_THAN expression
    (10) expression -> expression . LESS_THAN_EQUAL expression
    (11) expression -> expression . GREATER_THAN expression
    (12) expression -> expression . GREATER_THAN_EQUAL expression
    (13) expression -> expression . EQUALS_EQUALS expression
    (14) expression -> expression . NOT_EQUAL expression
    (15) expression -> expression . MOD expression
    (16) expression -> expression . FLOOR_DIV expression
    (17) expression -> expression . EXPONENT expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (26) expression -> expression . OPEN_BRACKET expression CLOSE_BRACKET

    CLOSE_PARENTHESIS reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    PLUS            reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    MINUS           reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    LESS_THAN       reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    LESS_THAN_EQUAL reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    GREATER_THAN    reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    GREATER_THAN_EQUAL reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    EQUALS_EQUALS   reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    NOT_EQUAL       reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    FLOOR_DIV       reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    AND             reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    OR              reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    $end            reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    CLOSE_BRACKET   reduce using rule 16 (expression -> expression FLOOR_DIV expression .)
    DIVIDE          shift and go to state 26
    MULT            shift and go to state 29
    MOD             shift and go to state 27
    EXPONENT        shift and go to state 25
    OPEN_BRACKET    shift and go to state 17

  ! DIVIDE          [ reduce using rule 16 (expression -> expression FLOOR_DIV expression .) ]
  ! MULT            [ reduce using rule 16 (expression -> expression FLOOR_DIV expression .) ]
  ! MOD             [ reduce using rule 16 (expression -> expression FLOOR_DIV expression .) ]
  ! EXPONENT        [ reduce using rule 16 (expression -> expression FLOOR_DIV expression .) ]
  ! OPEN_BRACKET    [ reduce using rule 16 (expression -> expression FLOOR_DIV expression .) ]
  ! PLUS            [ shift and go to state 23 ]
  ! MINUS           [ shift and go to state 20 ]
  ! LESS_THAN       [ shift and go to state 21 ]
  ! LESS_THAN_EQUAL [ shift and go to state 19 ]
  ! GREATER_THAN    [ shift and go to state 24 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 15 ]
  ! EQUALS_EQUALS   [ shift and go to state 18 ]
  ! NOT_EQUAL       [ shift and go to state 22 ]
  ! FLOOR_DIV       [ shift and go to state 30 ]
  ! AND             [ shift and go to state 28 ]
  ! OR              [ shift and go to state 16 ]


state 49

    (23) expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    CLOSE_PARENTHESIS reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    MULT            reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    LESS_THAN       reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    GREATER_THAN    reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    EQUALS_EQUALS   reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    MOD             reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    FLOOR_DIV       reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    EXPONENT        reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    AND             reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    OR              reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    $end            reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 23 (expression -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .)


state 50

    (26) expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .

    CLOSE_PARENTHESIS reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    DIVIDE          reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    MULT            reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    PLUS            reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    MINUS           reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    LESS_THAN       reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    GREATER_THAN    reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    EQUALS_EQUALS   reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    NOT_EQUAL       reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    MOD             reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    FLOOR_DIV       reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    EXPONENT        reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    AND             reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    OR              reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    $end            reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 26 (expression -> expression OPEN_BRACKET expression CLOSE_BRACKET .)

